// Package ip_messaging provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/faetools/devtool version (devel) DO NOT EDIT.
package ip_messaging

import (
	"time"
)

const (
	AccountSid_authTokenScopes = "accountSid_authToken.Scopes"
)

// Defines values for IpMessagingV2CredentialType.
const (
	IpMessagingV2CredentialTypeApn IpMessagingV2CredentialType = "apn"
	IpMessagingV2CredentialTypeFcm IpMessagingV2CredentialType = "fcm"
	IpMessagingV2CredentialTypeGcm IpMessagingV2CredentialType = "gcm"
)

// Defines values for IpMessagingV2ServiceBindingBindingType.
const (
	IpMessagingV2ServiceBindingBindingTypeApn IpMessagingV2ServiceBindingBindingType = "apn"
	IpMessagingV2ServiceBindingBindingTypeFcm IpMessagingV2ServiceBindingBindingType = "fcm"
	IpMessagingV2ServiceBindingBindingTypeGcm IpMessagingV2ServiceBindingBindingType = "gcm"
)

// Defines values for IpMessagingV2ServiceChannelType.
const (
	IpMessagingV2ServiceChannelTypePrivate IpMessagingV2ServiceChannelType = "private"
	IpMessagingV2ServiceChannelTypePublic  IpMessagingV2ServiceChannelType = "public"
)

// Defines values for IpMessagingV2ServiceRoleType.
const (
	IpMessagingV2ServiceRoleTypeChannel    IpMessagingV2ServiceRoleType = "channel"
	IpMessagingV2ServiceRoleTypeDeployment IpMessagingV2ServiceRoleType = "deployment"
)

// Defines values for IpMessagingV2ServiceUserUserBindingBindingType.
const (
	IpMessagingV2ServiceUserUserBindingBindingTypeApn IpMessagingV2ServiceUserUserBindingBindingType = "apn"
	IpMessagingV2ServiceUserUserBindingBindingTypeFcm IpMessagingV2ServiceUserUserBindingBindingType = "fcm"
	IpMessagingV2ServiceUserUserBindingBindingTypeGcm IpMessagingV2ServiceUserUserBindingBindingType = "gcm"
)

// Defines values for IpMessagingV2ServiceUserUserChannelNotificationLevel.
const (
	IpMessagingV2ServiceUserUserChannelNotificationLevelDefault IpMessagingV2ServiceUserUserChannelNotificationLevel = "default"
	IpMessagingV2ServiceUserUserChannelNotificationLevelMuted   IpMessagingV2ServiceUserUserChannelNotificationLevel = "muted"
)

// Defines values for IpMessagingV2ServiceUserUserChannelStatus.
const (
	IpMessagingV2ServiceUserUserChannelStatusInvited          IpMessagingV2ServiceUserUserChannelStatus = "invited"
	IpMessagingV2ServiceUserUserChannelStatusJoined           IpMessagingV2ServiceUserUserChannelStatus = "joined"
	IpMessagingV2ServiceUserUserChannelStatusNotParticipating IpMessagingV2ServiceUserUserChannelStatus = "not_participating"
)

// IpMessagingV2Credential defines model for ip_messaging.v2.credential.
type IpMessagingV2Credential struct {
	AccountSid   *string                      `json:"account_sid"`
	DateCreated  *time.Time                   `json:"date_created"`
	DateUpdated  *time.Time                   `json:"date_updated"`
	FriendlyName *string                      `json:"friendly_name"`
	Sandbox      *string                      `json:"sandbox"`
	Sid          *string                      `json:"sid"`
	Type         *IpMessagingV2CredentialType `json:"type"`
	Url          *string                      `json:"url"`
}

// IpMessagingV2CredentialType defines model for IpMessagingV2Credential.Type.
type IpMessagingV2CredentialType string

// IpMessagingV2Service defines model for ip_messaging.v2.service.
type IpMessagingV2Service struct {
	AccountSid                   *string                 `json:"account_sid"`
	ConsumptionReportInterval    *int                    `json:"consumption_report_interval"`
	DateCreated                  *time.Time              `json:"date_created"`
	DateUpdated                  *time.Time              `json:"date_updated"`
	DefaultChannelCreatorRoleSid *string                 `json:"default_channel_creator_role_sid"`
	DefaultChannelRoleSid        *string                 `json:"default_channel_role_sid"`
	DefaultServiceRoleSid        *string                 `json:"default_service_role_sid"`
	FriendlyName                 *string                 `json:"friendly_name"`
	Limits                       *map[string]interface{} `json:"limits"`
	Links                        *map[string]interface{} `json:"links"`
	Media                        *map[string]interface{} `json:"media"`
	Notifications                *map[string]interface{} `json:"notifications"`
	PostWebhookRetryCount        *int                    `json:"post_webhook_retry_count"`
	PostWebhookUrl               *string                 `json:"post_webhook_url"`
	PreWebhookRetryCount         *int                    `json:"pre_webhook_retry_count"`
	PreWebhookUrl                *string                 `json:"pre_webhook_url"`
	ReachabilityEnabled          *bool                   `json:"reachability_enabled"`
	ReadStatusEnabled            *bool                   `json:"read_status_enabled"`
	Sid                          *string                 `json:"sid"`
	TypingIndicatorTimeout       *int                    `json:"typing_indicator_timeout"`
	Url                          *string                 `json:"url"`
	WebhookFilters               *[]string               `json:"webhook_filters"`
	WebhookMethod                *string                 `json:"webhook_method"`
}

// IpMessagingV2ServiceBinding defines model for ip_messaging.v2.service.binding.
type IpMessagingV2ServiceBinding struct {
	AccountSid    *string                                 `json:"account_sid"`
	BindingType   *IpMessagingV2ServiceBindingBindingType `json:"binding_type"`
	CredentialSid *string                                 `json:"credential_sid"`
	DateCreated   *time.Time                              `json:"date_created"`
	DateUpdated   *time.Time                              `json:"date_updated"`
	Endpoint      *string                                 `json:"endpoint"`
	Identity      *string                                 `json:"identity"`
	Links         *map[string]interface{}                 `json:"links"`
	MessageTypes  *[]string                               `json:"message_types"`
	ServiceSid    *string                                 `json:"service_sid"`
	Sid           *string                                 `json:"sid"`
	Url           *string                                 `json:"url"`
}

// IpMessagingV2ServiceBindingBindingType defines model for IpMessagingV2ServiceBinding.BindingType.
type IpMessagingV2ServiceBindingBindingType string

// IpMessagingV2ServiceChannel defines model for ip_messaging.v2.service.channel.
type IpMessagingV2ServiceChannel struct {
	AccountSid    *string                          `json:"account_sid"`
	Attributes    *string                          `json:"attributes"`
	CreatedBy     *string                          `json:"created_by"`
	DateCreated   *time.Time                       `json:"date_created"`
	DateUpdated   *time.Time                       `json:"date_updated"`
	FriendlyName  *string                          `json:"friendly_name"`
	Links         *map[string]interface{}          `json:"links"`
	MembersCount  *int                             `json:"members_count"`
	MessagesCount *int                             `json:"messages_count"`
	ServiceSid    *string                          `json:"service_sid"`
	Sid           *string                          `json:"sid"`
	Type          *IpMessagingV2ServiceChannelType `json:"type"`
	UniqueName    *string                          `json:"unique_name"`
	Url           *string                          `json:"url"`
}

// IpMessagingV2ServiceChannelType defines model for IpMessagingV2ServiceChannel.Type.
type IpMessagingV2ServiceChannelType string

// IpMessagingV2ServiceChannelChannelWebhook defines model for ip_messaging.v2.service.channel.channel_webhook.
type IpMessagingV2ServiceChannelChannelWebhook struct {
	AccountSid    *string                 `json:"account_sid"`
	ChannelSid    *string                 `json:"channel_sid"`
	Configuration *map[string]interface{} `json:"configuration"`
	DateCreated   *time.Time              `json:"date_created"`
	DateUpdated   *time.Time              `json:"date_updated"`
	ServiceSid    *string                 `json:"service_sid"`
	Sid           *string                 `json:"sid"`
	Type          *string                 `json:"type"`
	Url           *string                 `json:"url"`
}

// IpMessagingV2ServiceChannelInvite defines model for ip_messaging.v2.service.channel.invite.
type IpMessagingV2ServiceChannelInvite struct {
	AccountSid  *string    `json:"account_sid"`
	ChannelSid  *string    `json:"channel_sid"`
	CreatedBy   *string    `json:"created_by"`
	DateCreated *time.Time `json:"date_created"`
	DateUpdated *time.Time `json:"date_updated"`
	Identity    *string    `json:"identity"`
	RoleSid     *string    `json:"role_sid"`
	ServiceSid  *string    `json:"service_sid"`
	Sid         *string    `json:"sid"`
	Url         *string    `json:"url"`
}

// IpMessagingV2ServiceChannelMember defines model for ip_messaging.v2.service.channel.member.
type IpMessagingV2ServiceChannelMember struct {
	AccountSid               *string    `json:"account_sid"`
	Attributes               *string    `json:"attributes"`
	ChannelSid               *string    `json:"channel_sid"`
	DateCreated              *time.Time `json:"date_created"`
	DateUpdated              *time.Time `json:"date_updated"`
	Identity                 *string    `json:"identity"`
	LastConsumedMessageIndex *int       `json:"last_consumed_message_index"`
	LastConsumptionTimestamp *time.Time `json:"last_consumption_timestamp"`
	RoleSid                  *string    `json:"role_sid"`
	ServiceSid               *string    `json:"service_sid"`
	Sid                      *string    `json:"sid"`
	Url                      *string    `json:"url"`
}

// IpMessagingV2ServiceChannelMessage defines model for ip_messaging.v2.service.channel.message.
type IpMessagingV2ServiceChannelMessage struct {
	AccountSid    *string                 `json:"account_sid"`
	Attributes    *string                 `json:"attributes"`
	Body          *string                 `json:"body"`
	ChannelSid    *string                 `json:"channel_sid"`
	DateCreated   *time.Time              `json:"date_created"`
	DateUpdated   *time.Time              `json:"date_updated"`
	From          *string                 `json:"from"`
	Index         *int                    `json:"index"`
	LastUpdatedBy *string                 `json:"last_updated_by"`
	Media         *map[string]interface{} `json:"media"`
	ServiceSid    *string                 `json:"service_sid"`
	Sid           *string                 `json:"sid"`
	To            *string                 `json:"to"`
	Type          *string                 `json:"type"`
	Url           *string                 `json:"url"`
	WasEdited     *bool                   `json:"was_edited"`
}

// IpMessagingV2ServiceRole defines model for ip_messaging.v2.service.role.
type IpMessagingV2ServiceRole struct {
	AccountSid   *string                       `json:"account_sid"`
	DateCreated  *time.Time                    `json:"date_created"`
	DateUpdated  *time.Time                    `json:"date_updated"`
	FriendlyName *string                       `json:"friendly_name"`
	Permissions  *[]string                     `json:"permissions"`
	ServiceSid   *string                       `json:"service_sid"`
	Sid          *string                       `json:"sid"`
	Type         *IpMessagingV2ServiceRoleType `json:"type"`
	Url          *string                       `json:"url"`
}

// IpMessagingV2ServiceRoleType defines model for IpMessagingV2ServiceRole.Type.
type IpMessagingV2ServiceRoleType string

// IpMessagingV2ServiceUser defines model for ip_messaging.v2.service.user.
type IpMessagingV2ServiceUser struct {
	AccountSid          *string                 `json:"account_sid"`
	Attributes          *string                 `json:"attributes"`
	DateCreated         *time.Time              `json:"date_created"`
	DateUpdated         *time.Time              `json:"date_updated"`
	FriendlyName        *string                 `json:"friendly_name"`
	Identity            *string                 `json:"identity"`
	IsNotifiable        *bool                   `json:"is_notifiable"`
	IsOnline            *bool                   `json:"is_online"`
	JoinedChannelsCount *int                    `json:"joined_channels_count"`
	Links               *map[string]interface{} `json:"links"`
	RoleSid             *string                 `json:"role_sid"`
	ServiceSid          *string                 `json:"service_sid"`
	Sid                 *string                 `json:"sid"`
	Url                 *string                 `json:"url"`
}

// IpMessagingV2ServiceUserUserBinding defines model for ip_messaging.v2.service.user.user_binding.
type IpMessagingV2ServiceUserUserBinding struct {
	AccountSid    *string                                         `json:"account_sid"`
	BindingType   *IpMessagingV2ServiceUserUserBindingBindingType `json:"binding_type"`
	CredentialSid *string                                         `json:"credential_sid"`
	DateCreated   *time.Time                                      `json:"date_created"`
	DateUpdated   *time.Time                                      `json:"date_updated"`
	Endpoint      *string                                         `json:"endpoint"`
	Identity      *string                                         `json:"identity"`
	MessageTypes  *[]string                                       `json:"message_types"`
	ServiceSid    *string                                         `json:"service_sid"`
	Sid           *string                                         `json:"sid"`
	Url           *string                                         `json:"url"`
	UserSid       *string                                         `json:"user_sid"`
}

// IpMessagingV2ServiceUserUserBindingBindingType defines model for IpMessagingV2ServiceUserUserBinding.BindingType.
type IpMessagingV2ServiceUserUserBindingBindingType string

// IpMessagingV2ServiceUserUserChannel defines model for ip_messaging.v2.service.user.user_channel.
type IpMessagingV2ServiceUserUserChannel struct {
	AccountSid               *string                                               `json:"account_sid"`
	ChannelSid               *string                                               `json:"channel_sid"`
	LastConsumedMessageIndex *int                                                  `json:"last_consumed_message_index"`
	Links                    *map[string]interface{}                               `json:"links"`
	MemberSid                *string                                               `json:"member_sid"`
	NotificationLevel        *IpMessagingV2ServiceUserUserChannelNotificationLevel `json:"notification_level"`
	ServiceSid               *string                                               `json:"service_sid"`
	Status                   *IpMessagingV2ServiceUserUserChannelStatus            `json:"status"`
	UnreadMessagesCount      *int                                                  `json:"unread_messages_count"`
	Url                      *string                                               `json:"url"`
	UserSid                  *string                                               `json:"user_sid"`
}

// IpMessagingV2ServiceUserUserChannelNotificationLevel defines model for IpMessagingV2ServiceUserUserChannel.NotificationLevel.
type IpMessagingV2ServiceUserUserChannelNotificationLevel string

// IpMessagingV2ServiceUserUserChannelStatus defines model for IpMessagingV2ServiceUserUserChannel.Status.
type IpMessagingV2ServiceUserUserChannelStatus string

// ListCredentialParams defines parameters for ListCredential.
type ListCredentialParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListServiceParams defines parameters for ListService.
type ListServiceParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListBindingParams defines parameters for ListBinding.
type ListBindingParams struct {
	BindingType *[]ListBindingParamsBindingType `json:"BindingType,omitempty"`
	Identity    *[]string                       `json:"Identity,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListBindingParamsBindingType defines parameters for ListBinding.
type ListBindingParamsBindingType string

// ListChannelParams defines parameters for ListChannel.
type ListChannelParams struct {
	Type *[]ListChannelParamsType `json:"Type,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListChannelParamsType defines parameters for ListChannel.
type ListChannelParamsType string

// CreateChannelParams defines parameters for CreateChannel.
type CreateChannelParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *CreateChannelParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// CreateChannelParamsXTwilioWebhookEnabled defines parameters for CreateChannel.
type CreateChannelParamsXTwilioWebhookEnabled string

// ListInviteParams defines parameters for ListInvite.
type ListInviteParams struct {
	Identity *[]string `json:"Identity,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListMemberParams defines parameters for ListMember.
type ListMemberParams struct {
	Identity *[]string `json:"Identity,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// CreateMemberParams defines parameters for CreateMember.
type CreateMemberParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *CreateMemberParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// CreateMemberParamsXTwilioWebhookEnabled defines parameters for CreateMember.
type CreateMemberParamsXTwilioWebhookEnabled string

// DeleteMemberParams defines parameters for DeleteMember.
type DeleteMemberParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *DeleteMemberParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// DeleteMemberParamsXTwilioWebhookEnabled defines parameters for DeleteMember.
type DeleteMemberParamsXTwilioWebhookEnabled string

// UpdateMemberParams defines parameters for UpdateMember.
type UpdateMemberParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *UpdateMemberParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// UpdateMemberParamsXTwilioWebhookEnabled defines parameters for UpdateMember.
type UpdateMemberParamsXTwilioWebhookEnabled string

// ListMessageParams defines parameters for ListMessage.
type ListMessageParams struct {
	Order *ListMessageParamsOrder `json:"Order,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListMessageParamsOrder defines parameters for ListMessage.
type ListMessageParamsOrder string

// CreateMessageParams defines parameters for CreateMessage.
type CreateMessageParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *CreateMessageParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// CreateMessageParamsXTwilioWebhookEnabled defines parameters for CreateMessage.
type CreateMessageParamsXTwilioWebhookEnabled string

// DeleteMessageParams defines parameters for DeleteMessage.
type DeleteMessageParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *DeleteMessageParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// DeleteMessageParamsXTwilioWebhookEnabled defines parameters for DeleteMessage.
type DeleteMessageParamsXTwilioWebhookEnabled string

// UpdateMessageParams defines parameters for UpdateMessage.
type UpdateMessageParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *UpdateMessageParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// UpdateMessageParamsXTwilioWebhookEnabled defines parameters for UpdateMessage.
type UpdateMessageParamsXTwilioWebhookEnabled string

// ListChannelWebhookParams defines parameters for ListChannelWebhook.
type ListChannelWebhookParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// DeleteChannelParams defines parameters for DeleteChannel.
type DeleteChannelParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *DeleteChannelParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// DeleteChannelParamsXTwilioWebhookEnabled defines parameters for DeleteChannel.
type DeleteChannelParamsXTwilioWebhookEnabled string

// UpdateChannelParams defines parameters for UpdateChannel.
type UpdateChannelParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *UpdateChannelParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// UpdateChannelParamsXTwilioWebhookEnabled defines parameters for UpdateChannel.
type UpdateChannelParamsXTwilioWebhookEnabled string

// ListRoleParams defines parameters for ListRole.
type ListRoleParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListUserParams defines parameters for ListUser.
type ListUserParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// CreateUserParams defines parameters for CreateUser.
type CreateUserParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *CreateUserParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// CreateUserParamsXTwilioWebhookEnabled defines parameters for CreateUser.
type CreateUserParamsXTwilioWebhookEnabled string

// UpdateUserParams defines parameters for UpdateUser.
type UpdateUserParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *UpdateUserParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// UpdateUserParamsXTwilioWebhookEnabled defines parameters for UpdateUser.
type UpdateUserParamsXTwilioWebhookEnabled string

// ListUserBindingParams defines parameters for ListUserBinding.
type ListUserBindingParams struct {
	BindingType *[]ListUserBindingParamsBindingType `json:"BindingType,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListUserBindingParamsBindingType defines parameters for ListUserBinding.
type ListUserBindingParamsBindingType string

// ListUserChannelParams defines parameters for ListUserChannel.
type ListUserChannelParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}
