// Package sync provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/faetools/devtool version (devel) DO NOT EDIT.
package sync

import (
	"time"
)

const (
	AccountSid_authTokenScopes = "accountSid_authToken.Scopes"
)

// SyncV1Service defines model for sync.v1.service.
type SyncV1Service struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// Whether token identities in the Service must be granted access to Sync objects by using the Permissions resource
	AclEnabled *bool `json:"acl_enabled"`

	// The ISO 8601 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The string that you assigned to describe the resource
	FriendlyName *string `json:"friendly_name"`

	// The URLs of related resources
	Links *map[string]interface{} `json:"links"`

	// Whether every endpoint_disconnected event occurs after a configurable delay
	ReachabilityDebouncingEnabled *bool `json:"reachability_debouncing_enabled"`

	// The reachability event delay in milliseconds
	ReachabilityDebouncingWindow *int `json:"reachability_debouncing_window"`

	// Whether the service instance calls webhook_url when client endpoints connect to Sync
	ReachabilityWebhooksEnabled *bool `json:"reachability_webhooks_enabled"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// An application-defined string that uniquely identifies the resource
	UniqueName *string `json:"unique_name"`

	// The absolute URL of the Service resource
	Url *string `json:"url"`

	// The URL we call when Sync objects are manipulated
	WebhookUrl *string `json:"webhook_url"`

	// Whether the Service instance should call webhook_url when the REST API is used to update Sync objects
	WebhooksFromRestEnabled *bool `json:"webhooks_from_rest_enabled"`
}

// SyncV1ServiceDocument defines model for sync.v1.service.document.
type SyncV1ServiceDocument struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The identity of the Sync Document's creator
	CreatedBy *string `json:"created_by"`

	// An arbitrary, schema-less object that the Sync Document stores
	Data *map[string]interface{} `json:"data"`

	// The ISO 8601 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the Sync Document expires
	DateExpires *time.Time `json:"date_expires"`

	// The ISO 8601 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The URLs of resources related to the Sync Document
	Links *map[string]interface{} `json:"links"`

	// The current revision of the Sync Document, represented by a string identifier
	Revision *string `json:"revision"`

	// The SID of the Sync Service that the resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// An application-defined string that uniquely identifies the resource
	UniqueName *string `json:"unique_name"`

	// The absolute URL of the Document resource
	Url *string `json:"url"`
}

// SyncV1ServiceDocumentDocumentPermission defines model for sync.v1.service.document.document_permission.
type SyncV1ServiceDocumentDocumentPermission struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The Sync Document SID
	DocumentSid *string `json:"document_sid"`

	// The identity of the user to whom the Sync Document Permission applies
	Identity *string `json:"identity"`

	// Manage access
	Manage *bool `json:"manage"`

	// Read access
	Read *bool `json:"read"`

	// The SID of the Sync Service that the resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The absolute URL of the Sync Document Permission resource
	Url *string `json:"url"`

	// Write access
	Write *bool `json:"write"`
}

// SyncV1ServiceSyncList defines model for sync.v1.service.sync_list.
type SyncV1ServiceSyncList struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The identity of the Sync List's creator
	CreatedBy *string `json:"created_by"`

	// The ISO 8601 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the Sync List expires
	DateExpires *time.Time `json:"date_expires"`

	// The ISO 8601 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The URLs of the Sync List's nested resources
	Links *map[string]interface{} `json:"links"`

	// The current revision of the Sync List, represented as a string
	Revision *string `json:"revision"`

	// The SID of the Sync Service that the resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// An application-defined string that uniquely identifies the resource
	UniqueName *string `json:"unique_name"`

	// The absolute URL of the Sync List resource
	Url *string `json:"url"`
}

// SyncV1ServiceSyncListSyncListItem defines model for sync.v1.service.sync_list.sync_list_item.
type SyncV1ServiceSyncListSyncListItem struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The identity of the List Item's creator
	CreatedBy *string `json:"created_by"`

	// An arbitrary, schema-less object that the List Item stores
	Data *map[string]interface{} `json:"data"`

	// The ISO 8601 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the List Item expires
	DateExpires *time.Time `json:"date_expires"`

	// The ISO 8601 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The automatically generated index of the List Item
	Index *int `json:"index"`

	// The SID of the Sync List that contains the List Item
	ListSid *string `json:"list_sid"`

	// The current revision of the item, represented as a string
	Revision *string `json:"revision"`

	// The SID of the Sync Service that the resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The absolute URL of the List Item resource
	Url *string `json:"url"`
}

// SyncV1ServiceSyncListSyncListPermission defines model for sync.v1.service.sync_list.sync_list_permission.
type SyncV1ServiceSyncListSyncListPermission struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The identity of the user to whom the Sync List Permission applies
	Identity *string `json:"identity"`

	// The SID of the Sync List to which the Permission applies
	ListSid *string `json:"list_sid"`

	// Manage access
	Manage *bool `json:"manage"`

	// Read access
	Read *bool `json:"read"`

	// The SID of the Sync Service that the resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The absolute URL of the Sync List Permission resource
	Url *string `json:"url"`

	// Write access
	Write *bool `json:"write"`
}

// SyncV1ServiceSyncMap defines model for sync.v1.service.sync_map.
type SyncV1ServiceSyncMap struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The identity of the Sync Map's creator
	CreatedBy *string `json:"created_by"`

	// The ISO 8601 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the Sync Map expires
	DateExpires *time.Time `json:"date_expires"`

	// The ISO 8601 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The URLs of the Sync Map's nested resources
	Links *map[string]interface{} `json:"links"`

	// The current revision of the Sync Map, represented as a string
	Revision *string `json:"revision"`

	// The SID of the Sync Service that the resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// An application-defined string that uniquely identifies the resource
	UniqueName *string `json:"unique_name"`

	// The absolute URL of the Sync Map resource
	Url *string `json:"url"`
}

// SyncV1ServiceSyncMapSyncMapItem defines model for sync.v1.service.sync_map.sync_map_item.
type SyncV1ServiceSyncMapSyncMapItem struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The identity of the Map Item's creator
	CreatedBy *string `json:"created_by"`

	// An arbitrary, schema-less object that the Map Item stores
	Data *map[string]interface{} `json:"data"`

	// The ISO 8601 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the Map Item expires
	DateExpires *time.Time `json:"date_expires"`

	// The ISO 8601 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The unique, user-defined key for the Map Item
	Key *string `json:"key"`

	// The SID of the Sync Map that contains the Map Item
	MapSid *string `json:"map_sid"`

	// The current revision of the Map Item, represented as a string
	Revision *string `json:"revision"`

	// The SID of the Sync Service that the resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The absolute URL of the Map Item resource
	Url *string `json:"url"`
}

// SyncV1ServiceSyncMapSyncMapPermission defines model for sync.v1.service.sync_map.sync_map_permission.
type SyncV1ServiceSyncMapSyncMapPermission struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The identity of the user to whom the Sync Document Permission applies
	Identity *string `json:"identity"`

	// Manage access
	Manage *bool `json:"manage"`

	// Sync Map SID
	MapSid *string `json:"map_sid"`

	// Read access
	Read *bool `json:"read"`

	// The SID of the Sync Service that the resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The absolute URL of the Sync Map Permission resource
	Url *string `json:"url"`

	// Write access
	Write *bool `json:"write"`
}

// SyncV1ServiceSyncStream defines model for sync.v1.service.sync_stream.
type SyncV1ServiceSyncStream struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The Identity of the Stream's creator
	CreatedBy *string `json:"created_by"`

	// The ISO 8601 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the Message Stream expires
	DateExpires *time.Time `json:"date_expires"`

	// The ISO 8601 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The URLs of the Stream's nested resources
	Links *map[string]interface{} `json:"links"`

	// The SID of the Sync Service that the resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// An application-defined string that uniquely identifies the resource
	UniqueName *string `json:"unique_name"`

	// The absolute URL of the Message Stream resource
	Url *string `json:"url"`
}

// SyncV1ServiceSyncStreamStreamMessage defines model for sync.v1.service.sync_stream.stream_message.
type SyncV1ServiceSyncStreamStreamMessage struct {
	// Stream Message body
	Data *map[string]interface{} `json:"data"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`
}

// ListServiceParams defines parameters for ListService.
type ListServiceParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListDocumentParams defines parameters for ListDocument.
type ListDocumentParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListDocumentPermissionParams defines parameters for ListDocumentPermission.
type ListDocumentPermissionParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// UpdateDocumentParams defines parameters for UpdateDocument.
type UpdateDocumentParams struct {
	// The If-Match HTTP request header
	IfMatch *string `json:"If-Match,omitempty"`
}

// ListSyncListParams defines parameters for ListSyncList.
type ListSyncListParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListSyncListItemParams defines parameters for ListSyncListItem.
type ListSyncListItemParams struct {
	// How to order the List Items returned by their `index` value. Can be: `asc` (ascending) or `desc` (descending) and the default is ascending.
	Order *ListSyncListItemParamsOrder `json:"Order,omitempty"`

	// The `index` of the first Sync List Item resource to read. See also `bounds`.
	From *string `json:"From,omitempty"`

	// Whether to include the List Item referenced by the `from` parameter. Can be: `inclusive` to include the List Item referenced by the `from` parameter or `exclusive` to start with the next List Item. The default value is `inclusive`.
	Bounds *ListSyncListItemParamsBounds `json:"Bounds,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListSyncListItemParamsOrder defines parameters for ListSyncListItem.
type ListSyncListItemParamsOrder string

// ListSyncListItemParamsBounds defines parameters for ListSyncListItem.
type ListSyncListItemParamsBounds string

// DeleteSyncListItemParams defines parameters for DeleteSyncListItem.
type DeleteSyncListItemParams struct {
	// If provided, applies this mutation if (and only if) the “revision” field of this [map item] matches the provided value. This matches the semantics of (and is implemented with) the HTTP [If-Match header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Match).
	IfMatch *string `json:"If-Match,omitempty"`
}

// UpdateSyncListItemParams defines parameters for UpdateSyncListItem.
type UpdateSyncListItemParams struct {
	// If provided, applies this mutation if (and only if) the “revision” field of this [map item] matches the provided value. This matches the semantics of (and is implemented with) the HTTP [If-Match header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Match).
	IfMatch *string `json:"If-Match,omitempty"`
}

// ListSyncListPermissionParams defines parameters for ListSyncListPermission.
type ListSyncListPermissionParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListSyncMapParams defines parameters for ListSyncMap.
type ListSyncMapParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListSyncMapItemParams defines parameters for ListSyncMapItem.
type ListSyncMapItemParams struct {
	// How to order the Map Items returned by their `key` value. Can be: `asc` (ascending) or `desc` (descending) and the default is ascending. Map Items are [ordered lexicographically](https://en.wikipedia.org/wiki/Lexicographical_order) by Item key.
	Order *ListSyncMapItemParamsOrder `json:"Order,omitempty"`

	// The `key` of the first Sync Map Item resource to read. See also `bounds`.
	From *string `json:"From,omitempty"`

	// Whether to include the Map Item referenced by the `from` parameter. Can be: `inclusive` to include the Map Item referenced by the `from` parameter or `exclusive` to start with the next Map Item. The default value is `inclusive`.
	Bounds *ListSyncMapItemParamsBounds `json:"Bounds,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListSyncMapItemParamsOrder defines parameters for ListSyncMapItem.
type ListSyncMapItemParamsOrder string

// ListSyncMapItemParamsBounds defines parameters for ListSyncMapItem.
type ListSyncMapItemParamsBounds string

// DeleteSyncMapItemParams defines parameters for DeleteSyncMapItem.
type DeleteSyncMapItemParams struct {
	// If provided, applies this mutation if (and only if) the “revision” field of this [map item] matches the provided value. This matches the semantics of (and is implemented with) the HTTP [If-Match header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Match).
	IfMatch *string `json:"If-Match,omitempty"`
}

// UpdateSyncMapItemParams defines parameters for UpdateSyncMapItem.
type UpdateSyncMapItemParams struct {
	// If provided, applies this mutation if (and only if) the “revision” field of this [map item] matches the provided value. This matches the semantics of (and is implemented with) the HTTP [If-Match header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Match).
	IfMatch *string `json:"If-Match,omitempty"`
}

// ListSyncMapPermissionParams defines parameters for ListSyncMapPermission.
type ListSyncMapPermissionParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListSyncStreamParams defines parameters for ListSyncStream.
type ListSyncStreamParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}
