// Package autopilot provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/faetools/devtool version (devel) DO NOT EDIT.
package autopilot

import (
	"time"
)

const (
	AccountSid_authTokenScopes = "accountSid_authToken.Scopes"
)

// Defines values for AutopilotV1AssistantModelBuildStatus.
const (
	AutopilotV1AssistantModelBuildStatusBuilding  AutopilotV1AssistantModelBuildStatus = "building"
	AutopilotV1AssistantModelBuildStatusCanceled  AutopilotV1AssistantModelBuildStatus = "canceled"
	AutopilotV1AssistantModelBuildStatusCompleted AutopilotV1AssistantModelBuildStatus = "completed"
	AutopilotV1AssistantModelBuildStatusEnqueued  AutopilotV1AssistantModelBuildStatus = "enqueued"
	AutopilotV1AssistantModelBuildStatusFailed    AutopilotV1AssistantModelBuildStatus = "failed"
)

// AutopilotV1Assistant defines model for autopilot.v1.assistant.
type AutopilotV1Assistant struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// Reserved
	CallbackEvents *string `json:"callback_events"`

	// Reserved
	CallbackUrl *string `json:"callback_url"`

	// The RFC 2822 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The RFC 2822 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// A string describing the state of the assistant.
	DevelopmentStage *string `json:"development_stage"`

	// The string that you assigned to describe the resource
	FriendlyName *string `json:"friendly_name"`

	// Reserved
	LatestModelBuildSid *string `json:"latest_model_build_sid"`

	// A list of the URLs of the Assistant's related resources
	Links *map[string]interface{} `json:"links"`

	// Whether queries should be logged and kept after training
	LogQueries *bool `json:"log_queries"`

	// Whether model needs to be rebuilt
	NeedsModelBuild *bool `json:"needs_model_build"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// An application-defined string that uniquely identifies the resource
	UniqueName *string `json:"unique_name"`

	// The absolute URL of the Assistant resource
	Url *string `json:"url"`
}

// AutopilotV1AssistantDefaults defines model for autopilot.v1.assistant.defaults.
type AutopilotV1AssistantDefaults struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The SID of the Assistant that is the parent of the resource
	AssistantSid *string `json:"assistant_sid"`

	// The JSON string that describes the default task links
	Data *map[string]interface{} `json:"data"`

	// The absolute URL of the Defaults resource
	Url *string `json:"url"`
}

// AutopilotV1AssistantDialogue defines model for autopilot.v1.assistant.dialogue.
type AutopilotV1AssistantDialogue struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The SID of the Assistant that is the parent of the resource
	AssistantSid *string `json:"assistant_sid"`

	// The JSON string that describes the dialogue session object
	Data *map[string]interface{} `json:"data"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// The absolute URL of the Dialogue resource
	Url *string `json:"url"`
}

// AutopilotV1AssistantFieldType defines model for autopilot.v1.assistant.field_type.
type AutopilotV1AssistantFieldType struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The SID of the Assistant that is the parent of the resource
	AssistantSid *string `json:"assistant_sid"`

	// The RFC 2822 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The RFC 2822 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The string that you assigned to describe the resource
	FriendlyName *string `json:"friendly_name"`

	// A list of the URLs of related resources
	Links *map[string]interface{} `json:"links"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// An application-defined string that uniquely identifies the resource
	UniqueName *string `json:"unique_name"`

	// The absolute URL of the FieldType resource
	Url *string `json:"url"`
}

// AutopilotV1AssistantFieldTypeFieldValue defines model for autopilot.v1.assistant.field_type.field_value.
type AutopilotV1AssistantFieldTypeFieldValue struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The SID of the Assistant that is the parent of the FieldType associated with the resource
	AssistantSid *string `json:"assistant_sid"`

	// The RFC 2822 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The RFC 2822 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The SID of the Field Type associated with the Field Value
	FieldTypeSid *string `json:"field_type_sid"`

	// The ISO language-country tag that identifies the language of the value
	Language *string `json:"language"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// The word for which the field value is a synonym of
	SynonymOf *string `json:"synonym_of"`

	// The absolute URL of the FieldValue resource
	Url *string `json:"url"`

	// The Field Value data
	Value *string `json:"value"`
}

// AutopilotV1AssistantModelBuild defines model for autopilot.v1.assistant.model_build.
type AutopilotV1AssistantModelBuild struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The SID of the Assistant that is the parent of the resource
	AssistantSid *string `json:"assistant_sid"`

	// The time in seconds it took to build the model
	BuildDuration *int `json:"build_duration"`

	// The RFC 2822 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The RFC 2822 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// More information about why the model build failed, if `status` is `failed`
	ErrorCode *int `json:"error_code"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// The status of the model build process
	Status *AutopilotV1AssistantModelBuildStatus `json:"status"`

	// An application-defined string that uniquely identifies the resource
	UniqueName *string `json:"unique_name"`

	// The absolute URL of the ModelBuild resource
	Url *string `json:"url"`
}

// The status of the model build process
type AutopilotV1AssistantModelBuildStatus string

// AutopilotV1AssistantQuery defines model for autopilot.v1.assistant.query.
type AutopilotV1AssistantQuery struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The SID of the Assistant that is the parent of the resource
	AssistantSid *string `json:"assistant_sid"`

	// The RFC 2822 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The RFC 2822 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The SID of the [Dialogue](https://www.twilio.com/docs/autopilot/api/dialogue).
	DialogueSid *string `json:"dialogue_sid"`

	// The ISO language-country string that specifies the language used by the Query
	Language *string `json:"language"`

	// The SID of the [Model Build](https://www.twilio.com/docs/autopilot/api/model-build) queried
	ModelBuildSid *string `json:"model_build_sid"`

	// The end-user's natural language input
	Query *string `json:"query"`

	// The natural language analysis results that include the Task recognized and a list of identified Fields
	Results *map[string]interface{} `json:"results"`

	// The SID of an optional reference to the Sample created from the query
	SampleSid *string `json:"sample_sid"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// The communication channel from where the end-user input came
	SourceChannel *string `json:"source_channel"`

	// The status of the Query
	Status *string `json:"status"`

	// The absolute URL of the Query resource
	Url *string `json:"url"`
}

// AutopilotV1AssistantStyleSheet defines model for autopilot.v1.assistant.style_sheet.
type AutopilotV1AssistantStyleSheet struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The SID of the Assistant that is the parent of the resource
	AssistantSid *string `json:"assistant_sid"`

	// The JSON string that describes the style sheet object
	Data *map[string]interface{} `json:"data"`

	// The absolute URL of the StyleSheet resource
	Url *string `json:"url"`
}

// AutopilotV1AssistantTask defines model for autopilot.v1.assistant.task.
type AutopilotV1AssistantTask struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The URL from which the Assistant can fetch actions
	ActionsUrl *string `json:"actions_url"`

	// The SID of the Assistant that is the parent of the resource
	AssistantSid *string `json:"assistant_sid"`

	// The RFC 2822 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The RFC 2822 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The string that you assigned to describe the resource
	FriendlyName *string `json:"friendly_name"`

	// A list of the URLs of related resources
	Links *map[string]interface{} `json:"links"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// An application-defined string that uniquely identifies the resource
	UniqueName *string `json:"unique_name"`

	// The absolute URL of the Task resource
	Url *string `json:"url"`
}

// AutopilotV1AssistantTaskField defines model for autopilot.v1.assistant.task.field.
type AutopilotV1AssistantTaskField struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The SID of the Assistant that is the parent of the Task associated with the resource
	AssistantSid *string `json:"assistant_sid"`

	// The RFC 2822 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The RFC 2822 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The Field Type of the field
	FieldType *string `json:"field_type"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// The SID of the [Task](https://www.twilio.com/docs/autopilot/api/task) resource associated with this Field
	TaskSid *string `json:"task_sid"`

	// An application-defined string that uniquely identifies the resource
	UniqueName *string `json:"unique_name"`

	// The absolute URL of the Field resource
	Url *string `json:"url"`
}

// AutopilotV1AssistantTaskSample defines model for autopilot.v1.assistant.task.sample.
type AutopilotV1AssistantTaskSample struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The SID of the Assistant that is the parent of the Task associated with the resource
	AssistantSid *string `json:"assistant_sid"`

	// The RFC 2822 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The RFC 2822 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// An ISO language-country string that specifies the language used for the sample
	Language *string `json:"language"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// The communication channel from which the sample was captured
	SourceChannel *string `json:"source_channel"`

	// The text example of how end users might express the task
	TaggedText *string `json:"tagged_text"`

	// The SID of the Task associated with the resource
	TaskSid *string `json:"task_sid"`

	// The absolute URL of the Sample resource
	Url *string `json:"url"`
}

// AutopilotV1AssistantTaskTaskActions defines model for autopilot.v1.assistant.task.task_actions.
type AutopilotV1AssistantTaskTaskActions struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The SID of the Assistant that is the parent of the Task associated with the resource
	AssistantSid *string `json:"assistant_sid"`

	// The JSON string that specifies the actions that instruct the Assistant on how to perform the task
	Data *map[string]interface{} `json:"data"`

	// The SID of the Task associated with the resource
	TaskSid *string `json:"task_sid"`

	// The absolute URL of the TaskActions resource
	Url *string `json:"url"`
}

// AutopilotV1AssistantTaskTaskStatistics defines model for autopilot.v1.assistant.task.task_statistics.
type AutopilotV1AssistantTaskTaskStatistics struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The SID of the Assistant that is the parent of the Task associated with the resource
	AssistantSid *string `json:"assistant_sid"`

	// The total number of Fields associated with the Task
	FieldsCount *int `json:"fields_count"`

	// The total number of Samples associated with the Task
	SamplesCount *int `json:"samples_count"`

	// The SID of the Task for which the statistics were collected
	TaskSid *string `json:"task_sid"`

	// The absolute URL of the TaskStatistics resource
	Url *string `json:"url"`
}

// AutopilotV1AssistantWebhook defines model for autopilot.v1.assistant.webhook.
type AutopilotV1AssistantWebhook struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The SID of the Assistant that is the parent of the resource
	AssistantSid *string `json:"assistant_sid"`

	// The RFC 2822 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The RFC 2822 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The list of space-separated events that this Webhook is subscribed to.
	Events *string `json:"events"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// An application-defined string that uniquely identifies the resource
	UniqueName *string `json:"unique_name"`

	// The absolute URL of the Webhook resource
	Url *string `json:"url"`

	// The method used when calling the webhook's URL.
	WebhookMethod *string `json:"webhook_method"`

	// The URL associated with this Webhook.
	WebhookUrl *string `json:"webhook_url"`
}

// AutopilotV1RestoreAssistant defines model for autopilot.v1.restore_assistant.
type AutopilotV1RestoreAssistant struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// Reserved
	CallbackEvents *string `json:"callback_events"`

	// Reserved
	CallbackUrl *string `json:"callback_url"`

	// The RFC 2822 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The RFC 2822 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// A string describing the state of the assistant.
	DevelopmentStage *string `json:"development_stage"`

	// The string that you assigned to describe the resource
	FriendlyName *string `json:"friendly_name"`

	// Reserved
	LatestModelBuildSid *string `json:"latest_model_build_sid"`

	// Whether queries should be logged and kept after training
	LogQueries *bool `json:"log_queries"`

	// Whether model needs to be rebuilt
	NeedsModelBuild *bool `json:"needs_model_build"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// An application-defined string that uniquely identifies the resource
	UniqueName *string `json:"unique_name"`
}

// ListAssistantParams defines parameters for ListAssistant.
type ListAssistantParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListFieldTypeParams defines parameters for ListFieldType.
type ListFieldTypeParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListFieldValueParams defines parameters for ListFieldValue.
type ListFieldValueParams struct {
	// The [ISO language-country](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) tag that specifies the language of the value. Currently supported tags: `en-US`
	Language *string `json:"Language,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListModelBuildParams defines parameters for ListModelBuild.
type ListModelBuildParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListQueryParams defines parameters for ListQuery.
type ListQueryParams struct {
	// The [ISO language-country](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) string that specifies the language used by the Query resources to read. For example: `en-US`.
	Language *string `json:"Language,omitempty"`

	// The SID or unique name of the [Model Build](https://www.twilio.com/docs/autopilot/api/model-build) to be queried.
	ModelBuild *string `json:"ModelBuild,omitempty"`

	// The status of the resources to read. Can be: `pending-review`, `reviewed`, or `discarded`
	Status *string `json:"Status,omitempty"`

	// The SID of the [Dialogue](https://www.twilio.com/docs/autopilot/api/dialogue).
	DialogueSid *string `json:"DialogueSid,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListTaskParams defines parameters for ListTask.
type ListTaskParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListFieldParams defines parameters for ListField.
type ListFieldParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListSampleParams defines parameters for ListSample.
type ListSampleParams struct {
	// The [ISO language-country](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) string that specifies the language used for the sample. For example: `en-US`.
	Language *string `json:"Language,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListWebhookParams defines parameters for ListWebhook.
type ListWebhookParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}
