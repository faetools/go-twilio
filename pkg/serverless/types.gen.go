// Package serverless provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/faetools/devtool version (devel) DO NOT EDIT.
package serverless

import (
	"time"
)

const (
	AccountSid_authTokenScopes = "accountSid_authToken.Scopes"
)

// Defines values for ServerlessV1ServiceAssetAssetVersionVisibility.
const (
	ServerlessV1ServiceAssetAssetVersionVisibilityPrivate   ServerlessV1ServiceAssetAssetVersionVisibility = "private"
	ServerlessV1ServiceAssetAssetVersionVisibilityProtected ServerlessV1ServiceAssetAssetVersionVisibility = "protected"
	ServerlessV1ServiceAssetAssetVersionVisibilityPublic    ServerlessV1ServiceAssetAssetVersionVisibility = "public"
)

// Defines values for ServerlessV1ServiceBuildRuntime.
const (
	ServerlessV1ServiceBuildRuntimeNode10 ServerlessV1ServiceBuildRuntime = "node10"
	ServerlessV1ServiceBuildRuntimeNode12 ServerlessV1ServiceBuildRuntime = "node12"
	ServerlessV1ServiceBuildRuntimeNode14 ServerlessV1ServiceBuildRuntime = "node14"
	ServerlessV1ServiceBuildRuntimeNode8  ServerlessV1ServiceBuildRuntime = "node8"
)

// Defines values for ServerlessV1ServiceBuildStatus.
const (
	ServerlessV1ServiceBuildStatusBuilding  ServerlessV1ServiceBuildStatus = "building"
	ServerlessV1ServiceBuildStatusCompleted ServerlessV1ServiceBuildStatus = "completed"
	ServerlessV1ServiceBuildStatusFailed    ServerlessV1ServiceBuildStatus = "failed"
)

// Defines values for ServerlessV1ServiceBuildBuildStatusStatus.
const (
	ServerlessV1ServiceBuildBuildStatusStatusBuilding  ServerlessV1ServiceBuildBuildStatusStatus = "building"
	ServerlessV1ServiceBuildBuildStatusStatusCompleted ServerlessV1ServiceBuildBuildStatusStatus = "completed"
	ServerlessV1ServiceBuildBuildStatusStatusFailed    ServerlessV1ServiceBuildBuildStatusStatus = "failed"
)

// Defines values for ServerlessV1ServiceEnvironmentLogLevel.
const (
	ServerlessV1ServiceEnvironmentLogLevelError ServerlessV1ServiceEnvironmentLogLevel = "error"
	ServerlessV1ServiceEnvironmentLogLevelInfo  ServerlessV1ServiceEnvironmentLogLevel = "info"
	ServerlessV1ServiceEnvironmentLogLevelWarn  ServerlessV1ServiceEnvironmentLogLevel = "warn"
)

// Defines values for ServerlessV1ServiceFunctionFunctionVersionVisibility.
const (
	ServerlessV1ServiceFunctionFunctionVersionVisibilityPrivate   ServerlessV1ServiceFunctionFunctionVersionVisibility = "private"
	ServerlessV1ServiceFunctionFunctionVersionVisibilityProtected ServerlessV1ServiceFunctionFunctionVersionVisibility = "protected"
	ServerlessV1ServiceFunctionFunctionVersionVisibilityPublic    ServerlessV1ServiceFunctionFunctionVersionVisibility = "public"
)

// ServerlessV1Service defines model for serverless.v1.service.
type ServerlessV1Service struct {
	// The SID of the Account that created the Service resource
	AccountSid *string `json:"account_sid"`

	// The ISO 8601 date and time in GMT when the Service resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the Service resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The base domain name for this Service, which is a combination of the unique name and a randomly generated string
	DomainBase *string `json:"domain_base"`

	// The string that you assigned to describe the Service resource
	FriendlyName *string `json:"friendly_name"`

	// Whether to inject Account credentials into a function invocation context
	IncludeCredentials *bool `json:"include_credentials"`

	// The URLs of the Service's nested resources
	Links *map[string]interface{} `json:"links"`

	// The unique string that identifies the Service resource
	Sid *string `json:"sid"`

	// Whether the Service resource's properties and subresources can be edited via the UI
	UiEditable *bool `json:"ui_editable"`

	// A user-defined string that uniquely identifies the Service resource
	UniqueName *string `json:"unique_name"`

	// The absolute URL of the Service resource
	Url *string `json:"url"`
}

// ServerlessV1ServiceAsset defines model for serverless.v1.service.asset.
type ServerlessV1ServiceAsset struct {
	// The SID of the Account that created the Asset resource
	AccountSid *string `json:"account_sid"`

	// The ISO 8601 date and time in GMT when the Asset resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the Asset resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The string that you assigned to describe the Asset resource
	FriendlyName *string `json:"friendly_name"`

	// The URLs of the Asset resource's nested resources
	Links *map[string]interface{} `json:"links"`

	// The SID of the Service that the Asset resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The unique string that identifies the Asset resource
	Sid *string `json:"sid"`

	// The absolute URL of the Asset resource
	Url *string `json:"url"`
}

// ServerlessV1ServiceAssetAssetVersion defines model for serverless.v1.service.asset.asset_version.
type ServerlessV1ServiceAssetAssetVersion struct {
	// The SID of the Account that created the Asset Version resource
	AccountSid *string `json:"account_sid"`

	// The SID of the Asset resource that is the parent of the Asset Version
	AssetSid *string `json:"asset_sid"`

	// The ISO 8601 date and time in GMT when the Asset Version resource was created
	DateCreated *time.Time `json:"date_created"`

	// The URL-friendly string by which the Asset Version can be referenced
	Path *string `json:"path"`

	// The SID of the Service that the Asset Version resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The unique string that identifies the Asset Version resource
	Sid *string `json:"sid"`

	// The absolute URL of the Asset Version resource
	Url *string `json:"url"`

	// The access control that determines how the Asset Version can be accessed
	Visibility *ServerlessV1ServiceAssetAssetVersionVisibility `json:"visibility"`
}

// The access control that determines how the Asset Version can be accessed
type ServerlessV1ServiceAssetAssetVersionVisibility string

// ServerlessV1ServiceBuild defines model for serverless.v1.service.build.
type ServerlessV1ServiceBuild struct {
	// The SID of the Account that created the Build resource
	AccountSid *string `json:"account_sid"`

	// The list of Asset Version resource SIDs that are included in the Build
	AssetVersions *[]map[string]interface{} `json:"asset_versions"`

	// The ISO 8601 date and time in GMT when the Build resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the Build resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// A list of objects that describe the Dependencies included in the Build
	Dependencies *[]map[string]interface{} `json:"dependencies"`

	// The list of Function Version resource SIDs that are included in the Build
	FunctionVersions *[]map[string]interface{} `json:"function_versions"`
	Links            *map[string]interface{}   `json:"links"`

	// The Runtime version that will be used to run the Build.
	Runtime *ServerlessV1ServiceBuildRuntime `json:"runtime"`

	// The SID of the Service that the Build resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The unique string that identifies the Build resource
	Sid *string `json:"sid"`

	// The status of the Build
	Status *ServerlessV1ServiceBuildStatus `json:"status"`

	// The absolute URL of the Build resource
	Url *string `json:"url"`
}

// The Runtime version that will be used to run the Build.
type ServerlessV1ServiceBuildRuntime string

// The status of the Build
type ServerlessV1ServiceBuildStatus string

// ServerlessV1ServiceBuildBuildStatus defines model for serverless.v1.service.build.build_status.
type ServerlessV1ServiceBuildBuildStatus struct {
	// The SID of the Account that created the Build resource
	AccountSid *string `json:"account_sid"`

	// The SID of the Service that the Build resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The unique string that identifies the Build resource
	Sid *string `json:"sid"`

	// The status of the Build
	Status *ServerlessV1ServiceBuildBuildStatusStatus `json:"status"`

	// The absolute URL of the Build Status resource
	Url *string `json:"url"`
}

// The status of the Build
type ServerlessV1ServiceBuildBuildStatusStatus string

// ServerlessV1ServiceEnvironment defines model for serverless.v1.service.environment.
type ServerlessV1ServiceEnvironment struct {
	// The SID of the Account that created the Environment resource
	AccountSid *string `json:"account_sid"`

	// The SID of the build deployed in the environment
	BuildSid *string `json:"build_sid"`

	// The ISO 8601 date and time in GMT when the Environment resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the Environment resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The domain name for all Functions and Assets deployed in the Environment
	DomainName *string `json:"domain_name"`

	// A URL-friendly name that represents the environment
	DomainSuffix *string `json:"domain_suffix"`

	// The URLs of the Environment resource's nested resources
	Links *map[string]interface{} `json:"links"`

	// The SID of the Service that the Environment resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The unique string that identifies the Environment resource
	Sid *string `json:"sid"`

	// A user-defined string that uniquely identifies the Environment resource
	UniqueName *string `json:"unique_name"`

	// The absolute URL of the Environment resource
	Url *string `json:"url"`
}

// ServerlessV1ServiceEnvironmentDeployment defines model for serverless.v1.service.environment.deployment.
type ServerlessV1ServiceEnvironmentDeployment struct {
	// The SID of the Account that created the Deployment resource
	AccountSid *string `json:"account_sid"`

	// The SID of the Build for the deployment
	BuildSid *string `json:"build_sid"`

	// The ISO 8601 date and time in GMT when the Deployment resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the Deployment resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The SID of the Environment for the Deployment
	EnvironmentSid *string `json:"environment_sid"`

	// The SID of the Service that the Deployment resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The unique string that identifies the Deployment resource
	Sid *string `json:"sid"`

	// The absolute URL of the Deployment resource
	Url *string `json:"url"`
}

// ServerlessV1ServiceEnvironmentLog defines model for serverless.v1.service.environment.log.
type ServerlessV1ServiceEnvironmentLog struct {
	// The SID of the Account that created the Log resource
	AccountSid *string `json:"account_sid"`

	// The SID of the build that corresponds to the log
	BuildSid *string `json:"build_sid"`

	// The ISO 8601 date and time in GMT when the Log resource was created
	DateCreated *time.Time `json:"date_created"`

	// The SID of the deployment that corresponds to the log
	DeploymentSid *string `json:"deployment_sid"`

	// The SID of the environment in which the log occurred
	EnvironmentSid *string `json:"environment_sid"`

	// The SID of the function whose invocation produced the log
	FunctionSid *string `json:"function_sid"`

	// The log level
	Level *ServerlessV1ServiceEnvironmentLogLevel `json:"level"`

	// The log message
	Message *string `json:"message"`

	// The SID of the request associated with the log
	RequestSid *string `json:"request_sid"`

	// The SID of the Service that the Log resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The unique string that identifies the Log resource
	Sid *string `json:"sid"`

	// The absolute URL of the Log resource
	Url *string `json:"url"`
}

// The log level
type ServerlessV1ServiceEnvironmentLogLevel string

// ServerlessV1ServiceEnvironmentVariable defines model for serverless.v1.service.environment.variable.
type ServerlessV1ServiceEnvironmentVariable struct {
	// The SID of the Account that created the Variable resource
	AccountSid *string `json:"account_sid"`

	// The ISO 8601 date and time in GMT when the Variable resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the Variable resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The SID of the Environment in which the Variable exists
	EnvironmentSid *string `json:"environment_sid"`

	// A string by which the Variable resource can be referenced
	Key *string `json:"key"`

	// The SID of the Service that the Variable resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The unique string that identifies the Variable resource
	Sid *string `json:"sid"`

	// The absolute URL of the Variable resource
	Url *string `json:"url"`

	// A string that contains the actual value of the Variable
	Value *string `json:"value"`
}

// ServerlessV1ServiceFunction defines model for serverless.v1.service.function.
type ServerlessV1ServiceFunction struct {
	// The SID of the Account that created the Function resource
	AccountSid *string `json:"account_sid"`

	// The ISO 8601 date and time in GMT when the Function resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the Function resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The string that you assigned to describe the Function resource
	FriendlyName *string `json:"friendly_name"`

	// The URLs of nested resources of the Function resource
	Links *map[string]interface{} `json:"links"`

	// The SID of the Service that the Function resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The unique string that identifies the Function resource
	Sid *string `json:"sid"`

	// The absolute URL of the Function resource
	Url *string `json:"url"`
}

// ServerlessV1ServiceFunctionFunctionVersion defines model for serverless.v1.service.function.function_version.
type ServerlessV1ServiceFunctionFunctionVersion struct {
	// The SID of the Account that created the Function Version resource
	AccountSid *string `json:"account_sid"`

	// The ISO 8601 date and time in GMT when the Function Version resource was created
	DateCreated *time.Time `json:"date_created"`

	// The SID of the Function resource that is the parent of the Function Version resource
	FunctionSid *string                 `json:"function_sid"`
	Links       *map[string]interface{} `json:"links"`

	// The URL-friendly string by which the Function Version resource can be referenced
	Path *string `json:"path"`

	// The SID of the Service that the Function Version resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The unique string that identifies the Function Version resource
	Sid *string `json:"sid"`

	// The absolute URL of the Function Version resource
	Url *string `json:"url"`

	// The access control that determines how the Function Version resource can be accessed
	Visibility *ServerlessV1ServiceFunctionFunctionVersionVisibility `json:"visibility"`
}

// The access control that determines how the Function Version resource can be accessed
type ServerlessV1ServiceFunctionFunctionVersionVisibility string

// ServerlessV1ServiceFunctionFunctionVersionFunctionVersionContent defines model for serverless.v1.service.function.function_version.function_version_content.
type ServerlessV1ServiceFunctionFunctionVersionFunctionVersionContent struct {
	// The SID of the Account that created the Function Version resource
	AccountSid *string `json:"account_sid"`

	// The content of the Function Version resource
	Content *string `json:"content"`

	// The SID of the Function that is the parent of the Function Version
	FunctionSid *string `json:"function_sid"`

	// The SID of the Service that the Function Version resource is associated with
	ServiceSid *string `json:"service_sid"`

	// The unique string that identifies the Function Version resource
	Sid *string `json:"sid"`
	Url *string `json:"url"`
}

// ListServiceParams defines parameters for ListService.
type ListServiceParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListAssetParams defines parameters for ListAsset.
type ListAssetParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListAssetVersionParams defines parameters for ListAssetVersion.
type ListAssetVersionParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListBuildParams defines parameters for ListBuild.
type ListBuildParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListEnvironmentParams defines parameters for ListEnvironment.
type ListEnvironmentParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListDeploymentParams defines parameters for ListDeployment.
type ListDeploymentParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListLogParams defines parameters for ListLog.
type ListLogParams struct {
	// The SID of the function whose invocation produced the Log resources to read.
	FunctionSid *string `json:"FunctionSid,omitempty"`

	// The date/time (in GMT, ISO 8601) after which the Log resources must have been created. Defaults to 1 day prior to current date/time.
	StartDate *time.Time `json:"StartDate,omitempty"`

	// The date/time (in GMT, ISO 8601) before which the Log resources must have been created. Defaults to current date/time.
	EndDate *time.Time `json:"EndDate,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListVariableParams defines parameters for ListVariable.
type ListVariableParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListFunctionParams defines parameters for ListFunction.
type ListFunctionParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListFunctionVersionParams defines parameters for ListFunctionVersion.
type ListFunctionVersionParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}
