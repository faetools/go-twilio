// Package monitor provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/faetools/devtool version (devel) DO NOT EDIT.
package monitor

import (
	"time"
)

const (
	AccountSid_authTokenScopes = "accountSid_authToken.Scopes"
)

// Defines values for MonitorV1AlertRequestMethod.
const (
	MonitorV1AlertRequestMethodDELETE MonitorV1AlertRequestMethod = "DELETE"
	MonitorV1AlertRequestMethodGET    MonitorV1AlertRequestMethod = "GET"
	MonitorV1AlertRequestMethodHEAD   MonitorV1AlertRequestMethod = "HEAD"
	MonitorV1AlertRequestMethodPATCH  MonitorV1AlertRequestMethod = "PATCH"
	MonitorV1AlertRequestMethodPOST   MonitorV1AlertRequestMethod = "POST"
	MonitorV1AlertRequestMethodPUT    MonitorV1AlertRequestMethod = "PUT"
)

// Defines values for MonitorV1AlertInstanceRequestMethod.
const (
	MonitorV1AlertInstanceRequestMethodDELETE MonitorV1AlertInstanceRequestMethod = "DELETE"
	MonitorV1AlertInstanceRequestMethodGET    MonitorV1AlertInstanceRequestMethod = "GET"
	MonitorV1AlertInstanceRequestMethodHEAD   MonitorV1AlertInstanceRequestMethod = "HEAD"
	MonitorV1AlertInstanceRequestMethodPATCH  MonitorV1AlertInstanceRequestMethod = "PATCH"
	MonitorV1AlertInstanceRequestMethodPOST   MonitorV1AlertInstanceRequestMethod = "POST"
	MonitorV1AlertInstanceRequestMethodPUT    MonitorV1AlertInstanceRequestMethod = "PUT"
)

// MonitorV1Alert defines model for monitor.v1.alert.
type MonitorV1Alert struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The text of the alert
	AlertText *string `json:"alert_text"`

	// The API version used when the alert was generated
	ApiVersion *string `json:"api_version"`

	// The ISO 8601 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The date and time when the alert was generated specified in ISO 8601 format
	DateGenerated *time.Time `json:"date_generated"`

	// The ISO 8601 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The error code for the condition that generated the alert
	ErrorCode *string `json:"error_code"`

	// The log level
	LogLevel *string `json:"log_level"`

	// The URL of the page in our Error Dictionary with more information about the error condition
	MoreInfo *string `json:"more_info"`

	// The method used by the request that generated the alert
	RequestMethod *MonitorV1AlertRequestMethod `json:"request_method"`

	// The URL of the request that generated the alert
	RequestUrl *string `json:"request_url"`

	// The SID of the resource for which the alert was generated
	ResourceSid *string `json:"resource_sid"`

	// The SID of the service or resource that generated the alert
	ServiceSid *string `json:"service_sid"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// The absolute URL of the Alert resource
	Url *string `json:"url"`
}

// The method used by the request that generated the alert
type MonitorV1AlertRequestMethod string

// MonitorV1AlertInstance defines model for monitor.v1.alert-instance.
type MonitorV1AlertInstance struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The text of the alert
	AlertText *string `json:"alert_text"`

	// The API version used when the alert was generated
	ApiVersion *string `json:"api_version"`

	// The ISO 8601 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The date and time when the alert was generated specified in ISO 8601 format
	DateGenerated *time.Time `json:"date_generated"`

	// The ISO 8601 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The error code for the condition that generated the alert
	ErrorCode *string `json:"error_code"`

	// The log level
	LogLevel *string `json:"log_level"`

	// The URL of the page in our Error Dictionary with more information about the error condition
	MoreInfo *string `json:"more_info"`

	// The request headers of the request that generated the alert
	RequestHeaders *string `json:"request_headers"`

	// The method used by the request that generated the alert
	RequestMethod *MonitorV1AlertInstanceRequestMethod `json:"request_method"`

	// The URL of the request that generated the alert
	RequestUrl *string `json:"request_url"`

	// The variables passed in the request that generated the alert
	RequestVariables *string `json:"request_variables"`

	// The SID of the resource for which the alert was generated
	ResourceSid *string `json:"resource_sid"`

	// The response body of the request that generated the alert
	ResponseBody *string `json:"response_body"`

	// The response headers of the request that generated the alert
	ResponseHeaders *string `json:"response_headers"`

	// The SID of the service or resource that generated the alert
	ServiceSid *string `json:"service_sid"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// The absolute URL of the Alert resource
	Url *string `json:"url"`
}

// The method used by the request that generated the alert
type MonitorV1AlertInstanceRequestMethod string

// MonitorV1Event defines model for monitor.v1.event.
type MonitorV1Event struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The SID of the actor that caused the event, if available
	ActorSid *string `json:"actor_sid"`

	// The type of actor that caused the event
	ActorType *string `json:"actor_type"`

	// A description of the event
	Description *string `json:"description"`

	// A JSON string that represents an object with additional data about the event
	EventData *map[string]interface{} `json:"event_data"`

	// The ISO 8601 date and time in GMT when the event was recorded
	EventDate *time.Time `json:"event_date"`

	// The event's type
	EventType *string `json:"event_type"`

	// The absolute URLs of related resources
	Links *map[string]interface{} `json:"links"`

	// The SID of the resource that was affected
	ResourceSid *string `json:"resource_sid"`

	// The type of resource that was affected
	ResourceType *string `json:"resource_type"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// The originating system or interface that caused the event
	Source *string `json:"source"`

	// The IP address of the source
	SourceIpAddress *string `json:"source_ip_address"`

	// The absolute URL of the resource that was affected
	Url *string `json:"url"`
}

// ListAlertParams defines parameters for ListAlert.
type ListAlertParams struct {
	// Only show alerts for this log-level.  Can be: `error`, `warning`, `notice`, or `debug`.
	LogLevel *string `json:"LogLevel,omitempty"`

	// Only include alerts that occurred on or after this date and time. Specify the date and time in GMT and format as `YYYY-MM-DD` or `YYYY-MM-DDThh:mm:ssZ`. Queries for alerts older than 30 days are not supported.
	StartDate *time.Time `json:"StartDate,omitempty"`

	// Only include alerts that occurred on or before this date and time. Specify the date and time in GMT and format as `YYYY-MM-DD` or `YYYY-MM-DDThh:mm:ssZ`. Queries for alerts older than 30 days are not supported.
	EndDate *time.Time `json:"EndDate,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListEventParams defines parameters for ListEvent.
type ListEventParams struct {
	// Only include events initiated by this Actor. Useful for auditing actions taken by specific users or API credentials.
	ActorSid *string `json:"ActorSid,omitempty"`

	// Only include events of this [Event Type](https://www.twilio.com/docs/usage/monitor-events#event-types).
	EventType *string `json:"EventType,omitempty"`

	// Only include events that refer to this resource. Useful for discovering the history of a specific resource.
	ResourceSid *string `json:"ResourceSid,omitempty"`

	// Only include events that originated from this IP address. Useful for tracking suspicious activity originating from the API or the Twilio Console.
	SourceIpAddress *string `json:"SourceIpAddress,omitempty"`

	// Only include events that occurred on or after this date. Specify the date in GMT and [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	StartDate *time.Time `json:"StartDate,omitempty"`

	// Only include events that occurred on or before this date. Specify the date in GMT and [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	EndDate *time.Time `json:"EndDate,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}
