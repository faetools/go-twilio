// Package wireless provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/faetools/devtool version (devel) DO NOT EDIT.
package wireless

import (
	"time"
)

const (
	AccountSid_authTokenScopes = "accountSid_authToken.Scopes"
)

// Defines values for WirelessV1CommandCommandMode.
const (
	WirelessV1CommandCommandModeBinary WirelessV1CommandCommandMode = "binary"
	WirelessV1CommandCommandModeText   WirelessV1CommandCommandMode = "text"
)

// Defines values for WirelessV1CommandDirection.
const (
	WirelessV1CommandDirectionFromSim WirelessV1CommandDirection = "from_sim"
	WirelessV1CommandDirectionToSim   WirelessV1CommandDirection = "to_sim"
)

// Defines values for WirelessV1CommandStatus.
const (
	WirelessV1CommandStatusDelivered WirelessV1CommandStatus = "delivered"
	WirelessV1CommandStatusFailed    WirelessV1CommandStatus = "failed"
	WirelessV1CommandStatusQueued    WirelessV1CommandStatus = "queued"
	WirelessV1CommandStatusReceived  WirelessV1CommandStatus = "received"
	WirelessV1CommandStatusSent      WirelessV1CommandStatus = "sent"
)

// Defines values for WirelessV1CommandTransport.
const (
	WirelessV1CommandTransportIp  WirelessV1CommandTransport = "ip"
	WirelessV1CommandTransportSms WirelessV1CommandTransport = "sms"
)

// Defines values for WirelessV1SimCommandsCallbackMethod.
const (
	WirelessV1SimCommandsCallbackMethodDELETE WirelessV1SimCommandsCallbackMethod = "DELETE"
	WirelessV1SimCommandsCallbackMethodGET    WirelessV1SimCommandsCallbackMethod = "GET"
	WirelessV1SimCommandsCallbackMethodHEAD   WirelessV1SimCommandsCallbackMethod = "HEAD"
	WirelessV1SimCommandsCallbackMethodPATCH  WirelessV1SimCommandsCallbackMethod = "PATCH"
	WirelessV1SimCommandsCallbackMethodPOST   WirelessV1SimCommandsCallbackMethod = "POST"
	WirelessV1SimCommandsCallbackMethodPUT    WirelessV1SimCommandsCallbackMethod = "PUT"
)

// Defines values for WirelessV1SimResetStatus.
const (
	WirelessV1SimResetStatusResetting WirelessV1SimResetStatus = "resetting"
)

// Defines values for WirelessV1SimSmsFallbackMethod.
const (
	WirelessV1SimSmsFallbackMethodDELETE WirelessV1SimSmsFallbackMethod = "DELETE"
	WirelessV1SimSmsFallbackMethodGET    WirelessV1SimSmsFallbackMethod = "GET"
	WirelessV1SimSmsFallbackMethodHEAD   WirelessV1SimSmsFallbackMethod = "HEAD"
	WirelessV1SimSmsFallbackMethodPATCH  WirelessV1SimSmsFallbackMethod = "PATCH"
	WirelessV1SimSmsFallbackMethodPOST   WirelessV1SimSmsFallbackMethod = "POST"
	WirelessV1SimSmsFallbackMethodPUT    WirelessV1SimSmsFallbackMethod = "PUT"
)

// Defines values for WirelessV1SimSmsMethod.
const (
	WirelessV1SimSmsMethodDELETE WirelessV1SimSmsMethod = "DELETE"
	WirelessV1SimSmsMethodGET    WirelessV1SimSmsMethod = "GET"
	WirelessV1SimSmsMethodHEAD   WirelessV1SimSmsMethod = "HEAD"
	WirelessV1SimSmsMethodPATCH  WirelessV1SimSmsMethod = "PATCH"
	WirelessV1SimSmsMethodPOST   WirelessV1SimSmsMethod = "POST"
	WirelessV1SimSmsMethodPUT    WirelessV1SimSmsMethod = "PUT"
)

// Defines values for WirelessV1SimStatus.
const (
	WirelessV1SimStatusActive      WirelessV1SimStatus = "active"
	WirelessV1SimStatusCanceled    WirelessV1SimStatus = "canceled"
	WirelessV1SimStatusDeactivated WirelessV1SimStatus = "deactivated"
	WirelessV1SimStatusNew         WirelessV1SimStatus = "new"
	WirelessV1SimStatusReady       WirelessV1SimStatus = "ready"
	WirelessV1SimStatusScheduled   WirelessV1SimStatus = "scheduled"
	WirelessV1SimStatusSuspended   WirelessV1SimStatus = "suspended"
	WirelessV1SimStatusUpdating    WirelessV1SimStatus = "updating"
)

// Defines values for WirelessV1SimVoiceFallbackMethod.
const (
	WirelessV1SimVoiceFallbackMethodDELETE WirelessV1SimVoiceFallbackMethod = "DELETE"
	WirelessV1SimVoiceFallbackMethodGET    WirelessV1SimVoiceFallbackMethod = "GET"
	WirelessV1SimVoiceFallbackMethodHEAD   WirelessV1SimVoiceFallbackMethod = "HEAD"
	WirelessV1SimVoiceFallbackMethodPATCH  WirelessV1SimVoiceFallbackMethod = "PATCH"
	WirelessV1SimVoiceFallbackMethodPOST   WirelessV1SimVoiceFallbackMethod = "POST"
	WirelessV1SimVoiceFallbackMethodPUT    WirelessV1SimVoiceFallbackMethod = "PUT"
)

// Defines values for WirelessV1SimVoiceMethod.
const (
	WirelessV1SimVoiceMethodDELETE WirelessV1SimVoiceMethod = "DELETE"
	WirelessV1SimVoiceMethodGET    WirelessV1SimVoiceMethod = "GET"
	WirelessV1SimVoiceMethodHEAD   WirelessV1SimVoiceMethod = "HEAD"
	WirelessV1SimVoiceMethodPATCH  WirelessV1SimVoiceMethod = "PATCH"
	WirelessV1SimVoiceMethodPOST   WirelessV1SimVoiceMethod = "POST"
	WirelessV1SimVoiceMethodPUT    WirelessV1SimVoiceMethod = "PUT"
)

// WirelessV1AccountUsageRecord defines model for wireless.v1.account_usage_record.
type WirelessV1AccountUsageRecord struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// An object that describes the aggregated Commands usage for all SIMs during the specified period
	Commands *map[string]interface{} `json:"commands"`

	// An object that describes the aggregated Data usage for all SIMs over the period
	Data *map[string]interface{} `json:"data"`

	// The time period for which usage is reported
	Period *map[string]interface{} `json:"period"`
}

// WirelessV1Command defines model for wireless.v1.command.
type WirelessV1Command struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The message being sent to or from the SIM
	Command *string `json:"command"`

	// The mode used to send the SMS message
	CommandMode *WirelessV1CommandCommandMode `json:"command_mode"`

	// The ISO 8601 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the resource was last updated format
	DateUpdated *time.Time `json:"date_updated"`

	// Whether to request a delivery receipt
	DeliveryReceiptRequested *bool `json:"delivery_receipt_requested"`

	// The direction of the Command
	Direction *WirelessV1CommandDirection `json:"direction"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// The SID of the Sim resource that the Command was sent to or from
	SimSid *string `json:"sim_sid"`

	// The status of the Command
	Status *WirelessV1CommandStatus `json:"status"`

	// The type of transport used
	Transport *WirelessV1CommandTransport `json:"transport"`

	// The absolute URL of the resource
	Url *string `json:"url"`
}

// The mode used to send the SMS message
type WirelessV1CommandCommandMode string

// The direction of the Command
type WirelessV1CommandDirection string

// The status of the Command
type WirelessV1CommandStatus string

// The type of transport used
type WirelessV1CommandTransport string

// WirelessV1RatePlan defines model for wireless.v1.rate_plan.
type WirelessV1RatePlan struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// Whether SIMs can use GPRS/3G/4G/LTE data connectivity
	DataEnabled *bool `json:"data_enabled"`

	// The total data usage in Megabytes that the Network allows during one month on the home network
	DataLimit *int `json:"data_limit"`

	// The model used to meter data usage
	DataMetering *string `json:"data_metering"`

	// The date when the resource was created, given as GMT in ISO 8601 format
	DateCreated *time.Time `json:"date_created"`

	// The date when the resource was last updated, given as GMT in ISO 8601 format
	DateUpdated *time.Time `json:"date_updated"`

	// The string that you assigned to describe the resource
	FriendlyName *string `json:"friendly_name"`

	// The services that SIMs capable of using GPRS/3G/4G/LTE data connectivity can use outside of the United States
	InternationalRoaming *[]string `json:"international_roaming"`

	// The total data usage (download and upload combined) in Megabytes that the Network allows during one month when roaming outside the United States
	InternationalRoamingDataLimit *int `json:"international_roaming_data_limit"`

	// Whether SIMs can make, send, and receive SMS using Commands
	MessagingEnabled *bool `json:"messaging_enabled"`

	// The total data usage in Megabytes that the Network allows during one month on non-home networks in the United States
	NationalRoamingDataLimit *int `json:"national_roaming_data_limit"`

	// Whether SIMs can roam on networks other than the home network in the United States
	NationalRoamingEnabled *bool `json:"national_roaming_enabled"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// An application-defined string that uniquely identifies the resource
	UniqueName *string `json:"unique_name"`

	// The absolute URL of the resource
	Url *string `json:"url"`

	// Deprecated. Whether SIMs can make and receive voice calls
	VoiceEnabled *bool `json:"voice_enabled"`
}

// WirelessV1Sim defines model for wireless.v1.sim.
type WirelessV1Sim struct {
	// The SID of the Account to which the Sim resource belongs
	AccountSid *string `json:"account_sid"`

	// The HTTP method we use to call commands_callback_url
	CommandsCallbackMethod *WirelessV1SimCommandsCallbackMethod `json:"commands_callback_method"`

	// The URL we call when the SIM originates a machine-to-machine Command
	CommandsCallbackUrl *string `json:"commands_callback_url"`

	// The ISO 8601 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the Sim resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// Deprecated
	EId *string `json:"e_id"`

	// The string that you assigned to describe the Sim resource
	FriendlyName *string `json:"friendly_name"`

	// The ICCID associated with the SIM
	Iccid *string `json:"iccid"`

	// Deprecated
	IpAddress *string `json:"ip_address"`

	// The URLs of related subresources
	Links *map[string]interface{} `json:"links"`

	// The SID of the RatePlan resource to which the Sim resource is assigned.
	RatePlanSid *string `json:"rate_plan_sid"`

	// The connectivity reset status of the SIM
	ResetStatus *WirelessV1SimResetStatus `json:"reset_status"`

	// The unique string that identifies the Sim resource
	Sid *string `json:"sid"`

	// Deprecated
	SmsFallbackMethod *WirelessV1SimSmsFallbackMethod `json:"sms_fallback_method"`

	// Deprecated
	SmsFallbackUrl *string `json:"sms_fallback_url"`

	// Deprecated
	SmsMethod *WirelessV1SimSmsMethod `json:"sms_method"`

	// Deprecated
	SmsUrl *string `json:"sms_url"`

	// The status of the Sim resource
	Status *WirelessV1SimStatus `json:"status"`

	// An application-defined string that uniquely identifies the resource
	UniqueName *string `json:"unique_name"`

	// The absolute URL of the resource
	Url *string `json:"url"`

	// Deprecated. The HTTP method we use to call voice_fallback_url
	VoiceFallbackMethod *WirelessV1SimVoiceFallbackMethod `json:"voice_fallback_method"`

	// Deprecated. The URL we call when an error occurs while retrieving or executing the TwiML requested from voice_url
	VoiceFallbackUrl *string `json:"voice_fallback_url"`

	// Deprecated. The HTTP method we use to call voice_url
	VoiceMethod *WirelessV1SimVoiceMethod `json:"voice_method"`

	// Deprecated. The URL we call when the SIM-connected device makes a voice call
	VoiceUrl *string `json:"voice_url"`
}

// The HTTP method we use to call commands_callback_url
type WirelessV1SimCommandsCallbackMethod string

// The connectivity reset status of the SIM
type WirelessV1SimResetStatus string

// Deprecated
type WirelessV1SimSmsFallbackMethod string

// Deprecated
type WirelessV1SimSmsMethod string

// The status of the Sim resource
type WirelessV1SimStatus string

// Deprecated. The HTTP method we use to call voice_fallback_url
type WirelessV1SimVoiceFallbackMethod string

// Deprecated. The HTTP method we use to call voice_url
type WirelessV1SimVoiceMethod string

// WirelessV1SimDataSession defines model for wireless.v1.sim.data_session.
type WirelessV1SimDataSession struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The unique ID of the cellular tower that the device was attached to at the moment when the Data Session was last updated
	CellId *string `json:"cell_id"`

	// An object with the estimated location where the device's Data Session took place
	CellLocationEstimate *map[string]interface{} `json:"cell_location_estimate"`

	// The date that the record ended, given as GMT in ISO 8601 format
	End *time.Time `json:"end"`

	// The unique ID of the device using the SIM to connect
	Imei *string `json:"imei"`

	// The date that the resource was last updated, given as GMT in ISO 8601 format
	LastUpdated *time.Time `json:"last_updated"`

	// The three letter country code representing where the device's Data Session took place
	OperatorCountry *string `json:"operator_country"`

	// The 'mobile country code' is the unique ID of the home country where the Data Session took place
	OperatorMcc *string `json:"operator_mcc"`

	// The 'mobile network code' is the unique ID specific to the mobile operator network where the Data Session took place
	OperatorMnc *string `json:"operator_mnc"`

	// The friendly name of the mobile operator network that the SIM-connected device is attached to
	OperatorName *string `json:"operator_name"`

	// The number of packets downloaded by the device between the start time and when the Data Session was last updated
	PacketsDownloaded *int `json:"packets_downloaded"`

	// The number of packets uploaded by the device between the start time and when the Data Session was last updated
	PacketsUploaded *int `json:"packets_uploaded"`

	// The generation of wireless technology that the device was using
	RadioLink *string `json:"radio_link"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// The SID of the Sim resource that the Data Session is for
	SimSid *string `json:"sim_sid"`

	// The date that the Data Session started, given as GMT in ISO 8601 format
	Start *time.Time `json:"start"`
}

// WirelessV1SimUsageRecord defines model for wireless.v1.sim.usage_record.
type WirelessV1SimUsageRecord struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// An object that describes the SIM's usage of Commands during the specified period
	Commands *map[string]interface{} `json:"commands"`

	// An object that describes the SIM's data usage during the specified period
	Data *map[string]interface{} `json:"data"`

	// The time period for which the usage is reported
	Period *map[string]interface{} `json:"period"`

	// The SID of the Sim resource that this Usage Record is for
	SimSid *string `json:"sim_sid"`
}

// ListCommandParams defines parameters for ListCommand.
type ListCommandParams struct {
	// The `sid` or `unique_name` of the [Sim resources](https://www.twilio.com/docs/wireless/api/sim-resource) to read.
	Sim *string `json:"Sim,omitempty"`

	// The status of the resources to read. Can be: `queued`, `sent`, `delivered`, `received`, or `failed`.
	Status *ListCommandParamsStatus `json:"Status,omitempty"`

	// Only return Commands with this direction value.
	Direction *ListCommandParamsDirection `json:"Direction,omitempty"`

	// Only return Commands with this transport value. Can be: `sms` or `ip`.
	Transport *ListCommandParamsTransport `json:"Transport,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListCommandParamsStatus defines parameters for ListCommand.
type ListCommandParamsStatus string

// ListCommandParamsDirection defines parameters for ListCommand.
type ListCommandParamsDirection string

// ListCommandParamsTransport defines parameters for ListCommand.
type ListCommandParamsTransport string

// ListRatePlanParams defines parameters for ListRatePlan.
type ListRatePlanParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListSimParams defines parameters for ListSim.
type ListSimParams struct {
	// Only return Sim resources with this status.
	Status *ListSimParamsStatus `json:"Status,omitempty"`

	// Only return Sim resources with this ICCID. This will return a list with a maximum size of 1.
	Iccid *string `json:"Iccid,omitempty"`

	// The SID or unique name of a [RatePlan resource](https://www.twilio.com/docs/wireless/api/rateplan-resource). Only return Sim resources assigned to this RatePlan resource.
	RatePlan *string `json:"RatePlan,omitempty"`

	// Deprecated.
	EId *string `json:"EId,omitempty"`

	// Only return Sim resources with this registration code. This will return a list with a maximum size of 1.
	SimRegistrationCode *string `json:"SimRegistrationCode,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListSimParamsStatus defines parameters for ListSim.
type ListSimParamsStatus string

// ListDataSessionParams defines parameters for ListDataSession.
type ListDataSessionParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListUsageRecordParams defines parameters for ListUsageRecord.
type ListUsageRecordParams struct {
	// Only include usage that occurred on or before this date, specified in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html). The default is the current time.
	End *time.Time `json:"End,omitempty"`

	// Only include usage that has occurred on or after this date, specified in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html). The default is one month before the `end` parameter value.
	Start *time.Time `json:"Start,omitempty"`

	// How to summarize the usage by time. Can be: `daily`, `hourly`, or `all`. The default is `all`. A value of `all` returns one Usage Record that describes the usage for the entire period.
	Granularity *ListUsageRecordParamsGranularity `json:"Granularity,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListUsageRecordParamsGranularity defines parameters for ListUsageRecord.
type ListUsageRecordParamsGranularity string

// ListAccountUsageRecordParams defines parameters for ListAccountUsageRecord.
type ListAccountUsageRecordParams struct {
	// Only include usage that has occurred on or before this date. Format is [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html).
	End *time.Time `json:"End,omitempty"`

	// Only include usage that has occurred on or after this date. Format is [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html).
	Start *time.Time `json:"Start,omitempty"`

	// How to summarize the usage by time. Can be: `daily`, `hourly`, or `all`. A value of `all` returns one Usage Record that describes the usage for the entire period.
	Granularity *ListAccountUsageRecordParamsGranularity `json:"Granularity,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListAccountUsageRecordParamsGranularity defines parameters for ListAccountUsageRecord.
type ListAccountUsageRecordParamsGranularity string
