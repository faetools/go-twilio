// Package conversations provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/faetools/devtool version (devel) DO NOT EDIT.
package conversations

import (
	"time"
)

const (
	AccountSid_authTokenScopes = "accountSid_authToken.Scopes"
)

// Defines values for ConversationsV1ConfigurationConfigurationWebhookMethod.
const (
	ConversationsV1ConfigurationConfigurationWebhookMethodGET  ConversationsV1ConfigurationConfigurationWebhookMethod = "GET"
	ConversationsV1ConfigurationConfigurationWebhookMethodPOST ConversationsV1ConfigurationConfigurationWebhookMethod = "POST"
)

// Defines values for ConversationsV1ConfigurationConfigurationWebhookTarget.
const (
	ConversationsV1ConfigurationConfigurationWebhookTargetFlex    ConversationsV1ConfigurationConfigurationWebhookTarget = "flex"
	ConversationsV1ConfigurationConfigurationWebhookTargetWebhook ConversationsV1ConfigurationConfigurationWebhookTarget = "webhook"
)

// Defines values for ConversationsV1ConversationState.
const (
	ConversationsV1ConversationStateActive   ConversationsV1ConversationState = "active"
	ConversationsV1ConversationStateClosed   ConversationsV1ConversationState = "closed"
	ConversationsV1ConversationStateInactive ConversationsV1ConversationState = "inactive"
)

// Defines values for ConversationsV1ConversationConversationMessageConversationMessageReceiptStatus.
const (
	ConversationsV1ConversationConversationMessageConversationMessageReceiptStatusDelivered   ConversationsV1ConversationConversationMessageConversationMessageReceiptStatus = "delivered"
	ConversationsV1ConversationConversationMessageConversationMessageReceiptStatusFailed      ConversationsV1ConversationConversationMessageConversationMessageReceiptStatus = "failed"
	ConversationsV1ConversationConversationMessageConversationMessageReceiptStatusRead        ConversationsV1ConversationConversationMessageConversationMessageReceiptStatus = "read"
	ConversationsV1ConversationConversationMessageConversationMessageReceiptStatusSent        ConversationsV1ConversationConversationMessageConversationMessageReceiptStatus = "sent"
	ConversationsV1ConversationConversationMessageConversationMessageReceiptStatusUndelivered ConversationsV1ConversationConversationMessageConversationMessageReceiptStatus = "undelivered"
)

// Defines values for ConversationsV1CredentialType.
const (
	ConversationsV1CredentialTypeApn ConversationsV1CredentialType = "apn"
	ConversationsV1CredentialTypeFcm ConversationsV1CredentialType = "fcm"
	ConversationsV1CredentialTypeGcm ConversationsV1CredentialType = "gcm"
)

// Defines values for ConversationsV1ParticipantConversationConversationState.
const (
	ConversationsV1ParticipantConversationConversationStateActive   ConversationsV1ParticipantConversationConversationState = "active"
	ConversationsV1ParticipantConversationConversationStateClosed   ConversationsV1ParticipantConversationConversationState = "closed"
	ConversationsV1ParticipantConversationConversationStateInactive ConversationsV1ParticipantConversationConversationState = "inactive"
)

// Defines values for ConversationsV1RoleType.
const (
	ConversationsV1RoleTypeConversation ConversationsV1RoleType = "conversation"
	ConversationsV1RoleTypeService      ConversationsV1RoleType = "service"
)

// Defines values for ConversationsV1ServiceServiceBindingBindingType.
const (
	ConversationsV1ServiceServiceBindingBindingTypeApn ConversationsV1ServiceServiceBindingBindingType = "apn"
	ConversationsV1ServiceServiceBindingBindingTypeFcm ConversationsV1ServiceServiceBindingBindingType = "fcm"
	ConversationsV1ServiceServiceBindingBindingTypeGcm ConversationsV1ServiceServiceBindingBindingType = "gcm"
)

// Defines values for ConversationsV1ServiceServiceConfigurationServiceWebhookConfigurationMethod.
const (
	ConversationsV1ServiceServiceConfigurationServiceWebhookConfigurationMethodGET  ConversationsV1ServiceServiceConfigurationServiceWebhookConfigurationMethod = "GET"
	ConversationsV1ServiceServiceConfigurationServiceWebhookConfigurationMethodPOST ConversationsV1ServiceServiceConfigurationServiceWebhookConfigurationMethod = "POST"
)

// Defines values for ConversationsV1ServiceServiceConversationState.
const (
	ConversationsV1ServiceServiceConversationStateActive   ConversationsV1ServiceServiceConversationState = "active"
	ConversationsV1ServiceServiceConversationStateClosed   ConversationsV1ServiceServiceConversationState = "closed"
	ConversationsV1ServiceServiceConversationStateInactive ConversationsV1ServiceServiceConversationState = "inactive"
)

// Defines values for ConversationsV1ServiceServiceConversationServiceConversationMessageServiceConversationMessageReceiptStatus.
const (
	ConversationsV1ServiceServiceConversationServiceConversationMessageServiceConversationMessageReceiptStatusDelivered   ConversationsV1ServiceServiceConversationServiceConversationMessageServiceConversationMessageReceiptStatus = "delivered"
	ConversationsV1ServiceServiceConversationServiceConversationMessageServiceConversationMessageReceiptStatusFailed      ConversationsV1ServiceServiceConversationServiceConversationMessageServiceConversationMessageReceiptStatus = "failed"
	ConversationsV1ServiceServiceConversationServiceConversationMessageServiceConversationMessageReceiptStatusRead        ConversationsV1ServiceServiceConversationServiceConversationMessageServiceConversationMessageReceiptStatus = "read"
	ConversationsV1ServiceServiceConversationServiceConversationMessageServiceConversationMessageReceiptStatusSent        ConversationsV1ServiceServiceConversationServiceConversationMessageServiceConversationMessageReceiptStatus = "sent"
	ConversationsV1ServiceServiceConversationServiceConversationMessageServiceConversationMessageReceiptStatusUndelivered ConversationsV1ServiceServiceConversationServiceConversationMessageServiceConversationMessageReceiptStatus = "undelivered"
)

// Defines values for ConversationsV1ServiceServiceParticipantConversationConversationState.
const (
	ConversationsV1ServiceServiceParticipantConversationConversationStateActive   ConversationsV1ServiceServiceParticipantConversationConversationState = "active"
	ConversationsV1ServiceServiceParticipantConversationConversationStateClosed   ConversationsV1ServiceServiceParticipantConversationConversationState = "closed"
	ConversationsV1ServiceServiceParticipantConversationConversationStateInactive ConversationsV1ServiceServiceParticipantConversationConversationState = "inactive"
)

// Defines values for ConversationsV1ServiceServiceRoleType.
const (
	ConversationsV1ServiceServiceRoleTypeConversation ConversationsV1ServiceServiceRoleType = "conversation"
	ConversationsV1ServiceServiceRoleTypeService      ConversationsV1ServiceServiceRoleType = "service"
)

// Defines values for ConversationsV1ServiceServiceUserServiceUserConversationConversationState.
const (
	ConversationsV1ServiceServiceUserServiceUserConversationConversationStateActive   ConversationsV1ServiceServiceUserServiceUserConversationConversationState = "active"
	ConversationsV1ServiceServiceUserServiceUserConversationConversationStateClosed   ConversationsV1ServiceServiceUserServiceUserConversationConversationState = "closed"
	ConversationsV1ServiceServiceUserServiceUserConversationConversationStateInactive ConversationsV1ServiceServiceUserServiceUserConversationConversationState = "inactive"
)

// Defines values for ConversationsV1ServiceServiceUserServiceUserConversationNotificationLevel.
const (
	ConversationsV1ServiceServiceUserServiceUserConversationNotificationLevelDefault ConversationsV1ServiceServiceUserServiceUserConversationNotificationLevel = "default"
	ConversationsV1ServiceServiceUserServiceUserConversationNotificationLevelMuted   ConversationsV1ServiceServiceUserServiceUserConversationNotificationLevel = "muted"
)

// Defines values for ConversationsV1UserUserConversationConversationState.
const (
	ConversationsV1UserUserConversationConversationStateActive   ConversationsV1UserUserConversationConversationState = "active"
	ConversationsV1UserUserConversationConversationStateClosed   ConversationsV1UserUserConversationConversationState = "closed"
	ConversationsV1UserUserConversationConversationStateInactive ConversationsV1UserUserConversationConversationState = "inactive"
)

// Defines values for ConversationsV1UserUserConversationNotificationLevel.
const (
	ConversationsV1UserUserConversationNotificationLevelDefault ConversationsV1UserUserConversationNotificationLevel = "default"
	ConversationsV1UserUserConversationNotificationLevelMuted   ConversationsV1UserUserConversationNotificationLevel = "muted"
)

// ConversationsV1Configuration defines model for conversations.v1.configuration.
type ConversationsV1Configuration struct {
	// The SID of the Account responsible for this configuration.
	AccountSid *string `json:"account_sid"`

	// The SID of the default Conversation Service that every new conversation is associated with.
	DefaultChatServiceSid *string `json:"default_chat_service_sid"`

	// Default ISO8601 duration when conversation will be switched to `closed` state.
	DefaultClosedTimer *string `json:"default_closed_timer"`

	// Default ISO8601 duration when conversation will be switched to `inactive` state.
	DefaultInactiveTimer *string `json:"default_inactive_timer"`

	// The SID of the default Messaging Service that every new conversation is associated with.
	DefaultMessagingServiceSid *string `json:"default_messaging_service_sid"`

	// Absolute URLs to access the webhook and default service configurations.
	Links *map[string]interface{} `json:"links"`

	// An absolute URL for this global configuration.
	Url *string `json:"url"`
}

// ConversationsV1ConfigurationConfigurationWebhook defines model for conversations.v1.configuration.configuration_webhook.
type ConversationsV1ConfigurationConfigurationWebhook struct {
	// The unique ID of the Account responsible for this conversation.
	AccountSid *string `json:"account_sid"`

	// The list of webhook event triggers that are enabled for this Service.
	Filters *[]string `json:"filters"`

	// The HTTP method to be used when sending a webhook request.
	Method *ConversationsV1ConfigurationConfigurationWebhookMethod `json:"method"`

	// The absolute url the post-event webhook request should be sent to.
	PostWebhookUrl *string `json:"post_webhook_url"`

	// The absolute url the pre-event webhook request should be sent to.
	PreWebhookUrl *string `json:"pre_webhook_url"`

	// The routing target of the webhook.
	Target *ConversationsV1ConfigurationConfigurationWebhookTarget `json:"target"`

	// An absolute URL for this webhook.
	Url *string `json:"url"`
}

// The HTTP method to be used when sending a webhook request.
type ConversationsV1ConfigurationConfigurationWebhookMethod string

// The routing target of the webhook.
type ConversationsV1ConfigurationConfigurationWebhookTarget string

// ConversationsV1ConfigurationAddress defines model for conversations.v1.configuration_address.
type ConversationsV1ConfigurationAddress struct {
	// The unique ID of the Account the address belongs to.
	AccountSid *string `json:"account_sid"`

	// The unique address to be configured.
	Address *string `json:"address"`

	// Auto Creation configuration for the address.
	AutoCreation *map[string]interface{} `json:"auto_creation"`

	// The date that this resource was created.
	DateCreated *time.Time `json:"date_created"`

	// The date that this resource was last updated.
	DateUpdated *time.Time `json:"date_updated"`

	// The human-readable name of this configuration.
	FriendlyName *string `json:"friendly_name"`

	// A 34 character string that uniquely identifies this resource.
	Sid *string `json:"sid"`

	// Type of Address.
	Type *string `json:"type"`

	// An absolute URL for this address configuration.
	Url *string `json:"url"`
}

// ConversationsV1Conversation defines model for conversations.v1.conversation.
type ConversationsV1Conversation struct {
	// The unique ID of the Account responsible for this conversation.
	AccountSid *string `json:"account_sid"`

	// An optional string metadata field you can use to store any data you wish.
	Attributes *string                 `json:"attributes"`
	Bindings   *map[string]interface{} `json:"bindings"`

	// The unique ID of the Conversation Service this conversation belongs to.
	ChatServiceSid *string `json:"chat_service_sid"`

	// The date that this resource was created.
	DateCreated *time.Time `json:"date_created"`

	// The date that this resource was last updated.
	DateUpdated *time.Time `json:"date_updated"`

	// The human-readable name of this conversation.
	FriendlyName *string `json:"friendly_name"`

	// Absolute URLs to access the participants, messages and webhooks of this conversation.
	Links *map[string]interface{} `json:"links"`

	// The unique ID of the Messaging Service this conversation belongs to.
	MessagingServiceSid *string `json:"messaging_service_sid"`

	// A 34 character string that uniquely identifies this resource.
	Sid *string `json:"sid"`

	// Current state of this conversation.
	State *ConversationsV1ConversationState `json:"state"`

	// Timer date values for this conversation.
	Timers *map[string]interface{} `json:"timers"`

	// An application-defined string that uniquely identifies the resource
	UniqueName *string `json:"unique_name"`

	// An absolute URL for this conversation.
	Url *string `json:"url"`
}

// Current state of this conversation.
type ConversationsV1ConversationState string

// ConversationsV1ConversationConversationMessage defines model for conversations.v1.conversation.conversation_message.
type ConversationsV1ConversationConversationMessage struct {
	// The unique ID of the Account responsible for this message.
	AccountSid *string `json:"account_sid"`

	// A string metadata field you can use to store any data you wish.
	Attributes *string `json:"attributes"`

	// The channel specific identifier of the message's author.
	Author *string `json:"author"`

	// The content of the message.
	Body *string `json:"body"`

	// The unique ID of the Conversation for this message.
	ConversationSid *string `json:"conversation_sid"`

	// The date that this resource was created.
	DateCreated *time.Time `json:"date_created"`

	// The date that this resource was last updated.
	DateUpdated *time.Time `json:"date_updated"`

	// An object that contains the summary of delivery statuses for the message to non-chat participants.
	Delivery *map[string]interface{} `json:"delivery"`

	// The index of the message within the Conversation.
	Index *int `json:"index"`

	// Absolute URL to access the receipts of this message.
	Links *map[string]interface{} `json:"links"`

	// An array of objects that describe the Message's media if attached, otherwise, null.
	Media *[]map[string]interface{} `json:"media"`

	// The unique ID of messages's author participant.
	ParticipantSid *string `json:"participant_sid"`

	// A 34 character string that uniquely identifies this resource.
	Sid *string `json:"sid"`

	// An absolute API URL for this message.
	Url *string `json:"url"`
}

// ConversationsV1ConversationConversationMessageConversationMessageReceipt defines model for conversations.v1.conversation.conversation_message.conversation_message_receipt.
type ConversationsV1ConversationConversationMessageConversationMessageReceipt struct {
	// The unique ID of the Account responsible for this participant.
	AccountSid *string `json:"account_sid"`

	// A messaging channel-specific identifier for the message delivered to participant
	ChannelMessageSid *string `json:"channel_message_sid"`

	// The unique ID of the Conversation for this message.
	ConversationSid *string `json:"conversation_sid"`

	// The date that this resource was created.
	DateCreated *time.Time `json:"date_created"`

	// The date that this resource was last updated.
	DateUpdated *time.Time `json:"date_updated"`

	// The message [delivery error code](https://www.twilio.com/docs/sms/api/message-resource#delivery-related-errors) for a `failed` status
	ErrorCode *int `json:"error_code"`

	// The SID of the message the delivery receipt belongs to
	MessageSid *string `json:"message_sid"`

	// The unique ID of the participant the delivery receipt belongs to.
	ParticipantSid *string `json:"participant_sid"`

	// A 34 character string that uniquely identifies this resource.
	Sid *string `json:"sid"`

	// The message delivery status
	Status *ConversationsV1ConversationConversationMessageConversationMessageReceiptStatus `json:"status"`

	// An absolute URL for this delivery receipt.
	Url *string `json:"url"`
}

// The message delivery status
type ConversationsV1ConversationConversationMessageConversationMessageReceiptStatus string

// ConversationsV1ConversationConversationParticipant defines model for conversations.v1.conversation.conversation_participant.
type ConversationsV1ConversationConversationParticipant struct {
	// The unique ID of the Account responsible for this participant.
	AccountSid *string `json:"account_sid"`

	// An optional string metadata field you can use to store any data you wish.
	Attributes *string `json:"attributes"`

	// The unique ID of the Conversation for this participant.
	ConversationSid *string `json:"conversation_sid"`

	// The date that this resource was created.
	DateCreated *time.Time `json:"date_created"`

	// The date that this resource was last updated.
	DateUpdated *time.Time `json:"date_updated"`

	// A unique string identifier for the conversation participant as Conversation User.
	Identity *string `json:"identity"`

	// Index of last “read” message in the Conversation for the Participant.
	LastReadMessageIndex *int `json:"last_read_message_index"`

	// Timestamp of last “read” message in the Conversation for the Participant.
	LastReadTimestamp *string `json:"last_read_timestamp"`

	// Information about how this participant exchanges messages with the conversation.
	MessagingBinding *map[string]interface{} `json:"messaging_binding"`

	// The SID of a conversation-level Role to assign to the participant
	RoleSid *string `json:"role_sid"`

	// A 34 character string that uniquely identifies this resource.
	Sid *string `json:"sid"`

	// An absolute URL for this participant.
	Url *string `json:"url"`
}

// ConversationsV1ConversationConversationScopedWebhook defines model for conversations.v1.conversation.conversation_scoped_webhook.
type ConversationsV1ConversationConversationScopedWebhook struct {
	// The unique ID of the Account responsible for this conversation.
	AccountSid *string `json:"account_sid"`

	// The configuration of this webhook.
	Configuration *map[string]interface{} `json:"configuration"`

	// The unique ID of the Conversation for this webhook.
	ConversationSid *string `json:"conversation_sid"`

	// The date that this resource was created.
	DateCreated *time.Time `json:"date_created"`

	// The date that this resource was last updated.
	DateUpdated *time.Time `json:"date_updated"`

	// A 34 character string that uniquely identifies this resource.
	Sid *string `json:"sid"`

	// The target of this webhook.
	Target *string `json:"target"`

	// An absolute URL for this webhook.
	Url *string `json:"url"`
}

// ConversationsV1Credential defines model for conversations.v1.credential.
type ConversationsV1Credential struct {
	// The unique ID of the Account responsible for this credential.
	AccountSid *string `json:"account_sid"`

	// The date that this resource was created.
	DateCreated *time.Time `json:"date_created"`

	// The date that this resource was last updated.
	DateUpdated *time.Time `json:"date_updated"`

	// The human-readable name of this credential.
	FriendlyName *string `json:"friendly_name"`

	// [APN only] Whether to send the credential to sandbox APNs.
	Sandbox *string `json:"sandbox"`

	// A 34 character string that uniquely identifies this resource.
	Sid *string `json:"sid"`

	// The type of push-notification service the credential is for.
	Type *ConversationsV1CredentialType `json:"type"`

	// An absolute URL for this credential.
	Url *string `json:"url"`
}

// The type of push-notification service the credential is for.
type ConversationsV1CredentialType string

// ConversationsV1ParticipantConversation defines model for conversations.v1.participant_conversation.
type ConversationsV1ParticipantConversation struct {
	// The unique ID of the Account responsible for this conversation.
	AccountSid *string `json:"account_sid"`

	// The unique ID of the Conversation Service this conversation belongs to.
	ChatServiceSid *string `json:"chat_service_sid"`

	// An optional string metadata field you can use to store any data you wish.
	ConversationAttributes *string `json:"conversation_attributes"`

	// Creator of this conversation.
	ConversationCreatedBy *string `json:"conversation_created_by"`

	// The date that this conversation was created.
	ConversationDateCreated *time.Time `json:"conversation_date_created"`

	// The date that this conversation was last updated.
	ConversationDateUpdated *time.Time `json:"conversation_date_updated"`

	// The human-readable name of this conversation.
	ConversationFriendlyName *string `json:"conversation_friendly_name"`

	// The unique ID of the Conversation this Participant belongs to.
	ConversationSid *string `json:"conversation_sid"`

	// The current state of this User Conversation
	ConversationState *ConversationsV1ParticipantConversationConversationState `json:"conversation_state"`

	// Timer date values for this conversation.
	ConversationTimers *map[string]interface{} `json:"conversation_timers"`

	// An application-defined string that uniquely identifies the Conversation resource
	ConversationUniqueName *string `json:"conversation_unique_name"`

	// Absolute URLs to access the participant and conversation of this Participant Conversation.
	Links *map[string]interface{} `json:"links"`

	// A unique string identifier for the conversation participant as Conversation User.
	ParticipantIdentity *string `json:"participant_identity"`

	// Information about how this participant exchanges messages with the conversation.
	ParticipantMessagingBinding *map[string]interface{} `json:"participant_messaging_binding"`

	// The unique ID of the Participant.
	ParticipantSid *string `json:"participant_sid"`

	// The unique ID for the conversation participant as Conversation User.
	ParticipantUserSid *string `json:"participant_user_sid"`
}

// The current state of this User Conversation
type ConversationsV1ParticipantConversationConversationState string

// ConversationsV1Role defines model for conversations.v1.role.
type ConversationsV1Role struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The SID of the Conversation Service that the resource is associated with
	ChatServiceSid *string `json:"chat_service_sid"`

	// The ISO 8601 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The string that you assigned to describe the resource
	FriendlyName *string `json:"friendly_name"`

	// An array of the permissions the role has been granted
	Permissions *[]string `json:"permissions"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// The type of role
	Type *ConversationsV1RoleType `json:"type"`

	// An absolute URL for this user role.
	Url *string `json:"url"`
}

// The type of role
type ConversationsV1RoleType string

// ConversationsV1Service defines model for conversations.v1.service.
type ConversationsV1Service struct {
	// The unique ID of the Account responsible for this service.
	AccountSid *string `json:"account_sid"`

	// The date that this resource was created.
	DateCreated *time.Time `json:"date_created"`

	// The date that this resource was last updated.
	DateUpdated *time.Time `json:"date_updated"`

	// The human-readable name of this service.
	FriendlyName *string `json:"friendly_name"`

	// Absolute URLs to access the conversations, users, roles, bindings and configuration of this service.
	Links *map[string]interface{} `json:"links"`

	// A 34 character string that uniquely identifies this resource.
	Sid *string `json:"sid"`

	// An absolute URL for this service.
	Url *string `json:"url"`
}

// ConversationsV1ServiceServiceBinding defines model for conversations.v1.service.service_binding.
type ConversationsV1ServiceServiceBinding struct {
	// The unique ID of the Account responsible for this binding.
	AccountSid *string `json:"account_sid"`

	// The push technology to use for the binding.
	BindingType *ConversationsV1ServiceServiceBindingBindingType `json:"binding_type"`

	// The SID of the Conversation Service that the resource is associated with.
	ChatServiceSid *string `json:"chat_service_sid"`

	// The SID of the Credential for the binding.
	CredentialSid *string `json:"credential_sid"`

	// The date that this resource was created.
	DateCreated *time.Time `json:"date_created"`

	// The date that this resource was last updated.
	DateUpdated *time.Time `json:"date_updated"`

	// The unique endpoint identifier for the Binding.
	Endpoint *string `json:"endpoint"`

	// The identity of Conversation User associated with this binding.
	Identity *string `json:"identity"`

	// The Conversation message types the binding is subscribed to.
	MessageTypes *[]string `json:"message_types"`

	// A 34 character string that uniquely identifies this resource.
	Sid *string `json:"sid"`

	// An absolute URL for this binding.
	Url *string `json:"url"`
}

// The push technology to use for the binding.
type ConversationsV1ServiceServiceBindingBindingType string

// ConversationsV1ServiceServiceConfiguration defines model for conversations.v1.service.service_configuration.
type ConversationsV1ServiceServiceConfiguration struct {
	// The unique string that identifies the resource
	ChatServiceSid *string `json:"chat_service_sid"`

	// The service role assigned to users when they are added to the service
	DefaultChatServiceRoleSid *string `json:"default_chat_service_role_sid"`

	// The role assigned to a conversation creator user when they join a new conversation
	DefaultConversationCreatorRoleSid *string `json:"default_conversation_creator_role_sid"`

	// The role assigned to users when they are added to a conversation
	DefaultConversationRoleSid *string `json:"default_conversation_role_sid"`

	// Absolute URL to access the push notifications configuration of this service.
	Links *map[string]interface{} `json:"links"`

	// Whether the Reachability Indicator feature is enabled for this Conversations Service
	ReachabilityEnabled *bool `json:"reachability_enabled"`

	// An absolute URL for this service configuration.
	Url *string `json:"url"`
}

// ConversationsV1ServiceServiceConfigurationServiceNotification defines model for conversations.v1.service.service_configuration.service_notification.
type ConversationsV1ServiceServiceConfigurationServiceNotification struct {
	// The unique ID of the Account responsible for this configuration.
	AccountSid *string `json:"account_sid"`

	// The Push Notification configuration for being added to a Conversation.
	AddedToConversation *map[string]interface{} `json:"added_to_conversation"`

	// The SID of the Conversation Service that the Configuration applies to.
	ChatServiceSid *string `json:"chat_service_sid"`

	// Weather the notification logging is enabled.
	LogEnabled *bool `json:"log_enabled"`

	// The Push Notification configuration for New Messages.
	NewMessage *map[string]interface{} `json:"new_message"`

	// The Push Notification configuration for being removed from a Conversation.
	RemovedFromConversation *map[string]interface{} `json:"removed_from_conversation"`

	// An absolute URL for this configuration.
	Url *string `json:"url"`
}

// ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration defines model for conversations.v1.service.service_configuration.service_webhook_configuration.
type ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration struct {
	// The unique ID of the Account responsible for this service.
	AccountSid *string `json:"account_sid"`

	// The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.
	ChatServiceSid *string `json:"chat_service_sid"`

	// The list of events that your configured webhook targets will receive. Events not configured here will not fire.
	Filters *[]string `json:"filters"`

	// The HTTP method to be used when sending a webhook request
	Method *ConversationsV1ServiceServiceConfigurationServiceWebhookConfigurationMethod `json:"method"`

	// The absolute url the post-event webhook request should be sent to.
	PostWebhookUrl *string `json:"post_webhook_url"`

	// The absolute url the pre-event webhook request should be sent to.
	PreWebhookUrl *string `json:"pre_webhook_url"`

	// An absolute URL for this webhook.
	Url *string `json:"url"`
}

// The HTTP method to be used when sending a webhook request
type ConversationsV1ServiceServiceConfigurationServiceWebhookConfigurationMethod string

// ConversationsV1ServiceServiceConversation defines model for conversations.v1.service.service_conversation.
type ConversationsV1ServiceServiceConversation struct {
	// The unique ID of the Account responsible for this conversation.
	AccountSid *string `json:"account_sid"`

	// An optional string metadata field you can use to store any data you wish.
	Attributes *string                 `json:"attributes"`
	Bindings   *map[string]interface{} `json:"bindings"`

	// The unique ID of the Conversation Service this conversation belongs to.
	ChatServiceSid *string `json:"chat_service_sid"`

	// The date that this resource was created.
	DateCreated *time.Time `json:"date_created"`

	// The date that this resource was last updated.
	DateUpdated *time.Time `json:"date_updated"`

	// The human-readable name of this conversation.
	FriendlyName *string `json:"friendly_name"`

	// Absolute URLs to access the participants, messages and webhooks of this conversation.
	Links *map[string]interface{} `json:"links"`

	// The unique ID of the Messaging Service this conversation belongs to.
	MessagingServiceSid *string `json:"messaging_service_sid"`

	// A 34 character string that uniquely identifies this resource.
	Sid *string `json:"sid"`

	// Current state of this conversation.
	State *ConversationsV1ServiceServiceConversationState `json:"state"`

	// Timer date values for this conversation.
	Timers *map[string]interface{} `json:"timers"`

	// An application-defined string that uniquely identifies the resource
	UniqueName *string `json:"unique_name"`

	// An absolute URL for this conversation.
	Url *string `json:"url"`
}

// Current state of this conversation.
type ConversationsV1ServiceServiceConversationState string

// ConversationsV1ServiceServiceConversationServiceConversationMessage defines model for conversations.v1.service.service_conversation.service_conversation_message.
type ConversationsV1ServiceServiceConversationServiceConversationMessage struct {
	// The unique ID of the Account responsible for this message.
	AccountSid *string `json:"account_sid"`

	// A string metadata field you can use to store any data you wish.
	Attributes *string `json:"attributes"`

	// The channel specific identifier of the message's author.
	Author *string `json:"author"`

	// The content of the message.
	Body *string `json:"body"`

	// The SID of the Conversation Service that the resource is associated with.
	ChatServiceSid *string `json:"chat_service_sid"`

	// The unique ID of the Conversation for this message.
	ConversationSid *string `json:"conversation_sid"`

	// The date that this resource was created.
	DateCreated *time.Time `json:"date_created"`

	// The date that this resource was last updated.
	DateUpdated *time.Time `json:"date_updated"`

	// An object that contains the summary of delivery statuses for the message to non-chat participants.
	Delivery *map[string]interface{} `json:"delivery"`

	// The index of the message within the Conversation.
	Index *int `json:"index"`

	// Absolute URL to access the receipts of this message.
	Links *map[string]interface{} `json:"links"`

	// An array of objects that describe the Message's media if attached, otherwise, null.
	Media *[]map[string]interface{} `json:"media"`

	// The unique ID of messages's author participant.
	ParticipantSid *string `json:"participant_sid"`

	// A 34 character string that uniquely identifies this resource.
	Sid *string `json:"sid"`

	// An absolute URL for this message.
	Url *string `json:"url"`
}

// ConversationsV1ServiceServiceConversationServiceConversationMessageServiceConversationMessageReceipt defines model for conversations.v1.service.service_conversation.service_conversation_message.service_conversation_message_receipt.
type ConversationsV1ServiceServiceConversationServiceConversationMessageServiceConversationMessageReceipt struct {
	// The unique ID of the Account responsible for this participant.
	AccountSid *string `json:"account_sid"`

	// A messaging channel-specific identifier for the message delivered to participant
	ChannelMessageSid *string `json:"channel_message_sid"`

	// The SID of the Conversation Service that the resource is associated with.
	ChatServiceSid *string `json:"chat_service_sid"`

	// The unique ID of the Conversation for this message.
	ConversationSid *string `json:"conversation_sid"`

	// The date that this resource was created.
	DateCreated *time.Time `json:"date_created"`

	// The date that this resource was last updated.
	DateUpdated *time.Time `json:"date_updated"`

	// The message [delivery error code](https://www.twilio.com/docs/sms/api/message-resource#delivery-related-errors) for a `failed` status
	ErrorCode *int `json:"error_code"`

	// The SID of the message the delivery receipt belongs to
	MessageSid *string `json:"message_sid"`

	// The unique ID of the participant the delivery receipt belongs to.
	ParticipantSid *string `json:"participant_sid"`

	// A 34 character string that uniquely identifies this resource.
	Sid *string `json:"sid"`

	// The message delivery status
	Status *ConversationsV1ServiceServiceConversationServiceConversationMessageServiceConversationMessageReceiptStatus `json:"status"`

	// An absolute URL for this delivery receipt.
	Url *string `json:"url"`
}

// The message delivery status
type ConversationsV1ServiceServiceConversationServiceConversationMessageServiceConversationMessageReceiptStatus string

// ConversationsV1ServiceServiceConversationServiceConversationParticipant defines model for conversations.v1.service.service_conversation.service_conversation_participant.
type ConversationsV1ServiceServiceConversationServiceConversationParticipant struct {
	// The unique ID of the Account responsible for this participant.
	AccountSid *string `json:"account_sid"`

	// An optional string metadata field you can use to store any data you wish.
	Attributes *string `json:"attributes"`

	// The SID of the Conversation Service that the resource is associated with.
	ChatServiceSid *string `json:"chat_service_sid"`

	// The unique ID of the Conversation for this participant.
	ConversationSid *string `json:"conversation_sid"`

	// The date that this resource was created.
	DateCreated *time.Time `json:"date_created"`

	// The date that this resource was last updated.
	DateUpdated *time.Time `json:"date_updated"`

	// A unique string identifier for the conversation participant as Conversation User.
	Identity *string `json:"identity"`

	// Index of last “read” message in the Conversation for the Participant.
	LastReadMessageIndex *int `json:"last_read_message_index"`

	// Timestamp of last “read” message in the Conversation for the Participant.
	LastReadTimestamp *string `json:"last_read_timestamp"`

	// Information about how this participant exchanges messages with the conversation.
	MessagingBinding *map[string]interface{} `json:"messaging_binding"`

	// The SID of a conversation-level Role to assign to the participant
	RoleSid *string `json:"role_sid"`

	// A 34 character string that uniquely identifies this resource.
	Sid *string `json:"sid"`

	// An absolute URL for this participant.
	Url *string `json:"url"`
}

// ConversationsV1ServiceServiceConversationServiceConversationScopedWebhook defines model for conversations.v1.service.service_conversation.service_conversation_scoped_webhook.
type ConversationsV1ServiceServiceConversationServiceConversationScopedWebhook struct {
	// The unique ID of the Account responsible for this conversation.
	AccountSid *string `json:"account_sid"`

	// The SID of the Conversation Service that the resource is associated with.
	ChatServiceSid *string `json:"chat_service_sid"`

	// The configuration of this webhook.
	Configuration *map[string]interface{} `json:"configuration"`

	// The unique ID of the Conversation for this webhook.
	ConversationSid *string `json:"conversation_sid"`

	// The date that this resource was created.
	DateCreated *time.Time `json:"date_created"`

	// The date that this resource was last updated.
	DateUpdated *time.Time `json:"date_updated"`

	// A 34 character string that uniquely identifies this resource.
	Sid *string `json:"sid"`

	// The target of this webhook.
	Target *string `json:"target"`

	// An absolute URL for this webhook.
	Url *string `json:"url"`
}

// ConversationsV1ServiceServiceParticipantConversation defines model for conversations.v1.service.service_participant_conversation.
type ConversationsV1ServiceServiceParticipantConversation struct {
	// The unique ID of the Account responsible for this conversation.
	AccountSid *string `json:"account_sid"`

	// The unique ID of the Conversation Service this conversation belongs to.
	ChatServiceSid *string `json:"chat_service_sid"`

	// An optional string metadata field you can use to store any data you wish.
	ConversationAttributes *string `json:"conversation_attributes"`

	// Creator of this conversation.
	ConversationCreatedBy *string `json:"conversation_created_by"`

	// The date that this conversation was created.
	ConversationDateCreated *time.Time `json:"conversation_date_created"`

	// The date that this conversation was last updated.
	ConversationDateUpdated *time.Time `json:"conversation_date_updated"`

	// The human-readable name of this conversation.
	ConversationFriendlyName *string `json:"conversation_friendly_name"`

	// The unique ID of the Conversation this Participant belongs to.
	ConversationSid *string `json:"conversation_sid"`

	// The current state of this User Conversation
	ConversationState *ConversationsV1ServiceServiceParticipantConversationConversationState `json:"conversation_state"`

	// Timer date values for this conversation.
	ConversationTimers *map[string]interface{} `json:"conversation_timers"`

	// An application-defined string that uniquely identifies the Conversation resource.
	ConversationUniqueName *string `json:"conversation_unique_name"`

	// Absolute URLs to access the participant and conversation of this Participant Conversation.
	Links *map[string]interface{} `json:"links"`

	// A unique string identifier for the conversation participant as Conversation User.
	ParticipantIdentity *string `json:"participant_identity"`

	// Information about how this participant exchanges messages with the conversation.
	ParticipantMessagingBinding *map[string]interface{} `json:"participant_messaging_binding"`

	// The unique ID of the Participant.
	ParticipantSid *string `json:"participant_sid"`

	// The unique ID for the conversation participant as Conversation User.
	ParticipantUserSid *string `json:"participant_user_sid"`
}

// The current state of this User Conversation
type ConversationsV1ServiceServiceParticipantConversationConversationState string

// ConversationsV1ServiceServiceRole defines model for conversations.v1.service.service_role.
type ConversationsV1ServiceServiceRole struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The SID of the Conversation Service that the resource is associated with
	ChatServiceSid *string `json:"chat_service_sid"`

	// The ISO 8601 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The string that you assigned to describe the resource
	FriendlyName *string `json:"friendly_name"`

	// An array of the permissions the role has been granted
	Permissions *[]string `json:"permissions"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// The type of role
	Type *ConversationsV1ServiceServiceRoleType `json:"type"`

	// An absolute URL for this user role.
	Url *string `json:"url"`
}

// The type of role
type ConversationsV1ServiceServiceRoleType string

// ConversationsV1ServiceServiceUser defines model for conversations.v1.service.service_user.
type ConversationsV1ServiceServiceUser struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The JSON Object string that stores application-specific data
	Attributes *string `json:"attributes"`

	// The SID of the Conversation Service that the resource is associated with
	ChatServiceSid *string `json:"chat_service_sid"`

	// The ISO 8601 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The string that you assigned to describe the resource
	FriendlyName *string `json:"friendly_name"`

	// The string that identifies the resource's User
	Identity *string `json:"identity"`

	// Whether the User has a potentially valid Push Notification registration for this Conversations Service
	IsNotifiable *bool `json:"is_notifiable"`

	// Whether the User is actively connected to this Conversations Service and online
	IsOnline *bool                   `json:"is_online"`
	Links    *map[string]interface{} `json:"links"`

	// The SID of a service-level Role assigned to the user
	RoleSid *string `json:"role_sid"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// An absolute URL for this user.
	Url *string `json:"url"`
}

// ConversationsV1ServiceServiceUserServiceUserConversation defines model for conversations.v1.service.service_user.service_user_conversation.
type ConversationsV1ServiceServiceUserServiceUserConversation struct {
	// The unique ID of the Account responsible for this conversation.
	AccountSid *string `json:"account_sid"`

	// An optional string metadata field you can use to store any data you wish.
	Attributes *string `json:"attributes"`

	// The unique ID of the Conversation Service this conversation belongs to.
	ChatServiceSid *string `json:"chat_service_sid"`

	// The unique ID of the Conversation for this User Conversation.
	ConversationSid *string `json:"conversation_sid"`

	// The current state of this User Conversation
	ConversationState *ConversationsV1ServiceServiceUserServiceUserConversationConversationState `json:"conversation_state"`

	// Creator of this conversation.
	CreatedBy *string `json:"created_by"`

	// The date that this conversation was created.
	DateCreated *time.Time `json:"date_created"`

	// The date that this conversation was last updated.
	DateUpdated *time.Time `json:"date_updated"`

	// The human-readable name of this conversation.
	FriendlyName *string `json:"friendly_name"`

	// The index of the last read Message .
	LastReadMessageIndex *int `json:"last_read_message_index"`

	// Absolute URLs to access the participant and conversation of this user conversation.
	Links *map[string]interface{} `json:"links"`

	// The Notification Level of this User Conversation.
	NotificationLevel *ConversationsV1ServiceServiceUserServiceUserConversationNotificationLevel `json:"notification_level"`

	// Participant Sid.
	ParticipantSid *string `json:"participant_sid"`

	// Timer date values for this conversation.
	Timers *map[string]interface{} `json:"timers"`

	// An application-defined string that uniquely identifies the Conversation resource.
	UniqueName *string `json:"unique_name"`

	// The number of unread Messages in the Conversation.
	UnreadMessagesCount *int    `json:"unread_messages_count"`
	Url                 *string `json:"url"`

	// The unique ID for the User.
	UserSid *string `json:"user_sid"`
}

// The current state of this User Conversation
type ConversationsV1ServiceServiceUserServiceUserConversationConversationState string

// The Notification Level of this User Conversation.
type ConversationsV1ServiceServiceUserServiceUserConversationNotificationLevel string

// ConversationsV1User defines model for conversations.v1.user.
type ConversationsV1User struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid"`

	// The JSON Object string that stores application-specific data
	Attributes *string `json:"attributes"`

	// The SID of the Conversation Service that the resource is associated with
	ChatServiceSid *string `json:"chat_service_sid"`

	// The ISO 8601 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created"`

	// The ISO 8601 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated"`

	// The string that you assigned to describe the resource
	FriendlyName *string `json:"friendly_name"`

	// The string that identifies the resource's User
	Identity *string `json:"identity"`

	// Whether the User has a potentially valid Push Notification registration for this Conversations Service
	IsNotifiable *bool `json:"is_notifiable"`

	// Whether the User is actively connected to this Conversations Service and online
	IsOnline *bool                   `json:"is_online"`
	Links    *map[string]interface{} `json:"links"`

	// The SID of a service-level Role assigned to the user
	RoleSid *string `json:"role_sid"`

	// The unique string that identifies the resource
	Sid *string `json:"sid"`

	// An absolute URL for this user.
	Url *string `json:"url"`
}

// ConversationsV1UserUserConversation defines model for conversations.v1.user.user_conversation.
type ConversationsV1UserUserConversation struct {
	// The unique ID of the Account responsible for this conversation.
	AccountSid *string `json:"account_sid"`

	// An optional string metadata field you can use to store any data you wish.
	Attributes *string `json:"attributes"`

	// The unique ID of the Conversation Service this conversation belongs to.
	ChatServiceSid *string `json:"chat_service_sid"`

	// The unique ID of the Conversation for this User Conversation.
	ConversationSid *string `json:"conversation_sid"`

	// The current state of this User Conversation
	ConversationState *ConversationsV1UserUserConversationConversationState `json:"conversation_state"`

	// Creator of this conversation.
	CreatedBy *string `json:"created_by"`

	// The date that this conversation was created.
	DateCreated *time.Time `json:"date_created"`

	// The date that this conversation was last updated.
	DateUpdated *time.Time `json:"date_updated"`

	// The human-readable name of this conversation.
	FriendlyName *string `json:"friendly_name"`

	// The index of the last read Message .
	LastReadMessageIndex *int `json:"last_read_message_index"`

	// Absolute URLs to access the participant and conversation of this user conversation.
	Links *map[string]interface{} `json:"links"`

	// The Notification Level of this User Conversation.
	NotificationLevel *ConversationsV1UserUserConversationNotificationLevel `json:"notification_level"`

	// Participant Sid.
	ParticipantSid *string `json:"participant_sid"`

	// Timer date values for this conversation.
	Timers *map[string]interface{} `json:"timers"`

	// An application-defined string that uniquely identifies the Conversation resource.
	UniqueName *string `json:"unique_name"`

	// The number of unread Messages in the Conversation.
	UnreadMessagesCount *int    `json:"unread_messages_count"`
	Url                 *string `json:"url"`

	// The unique ID for the User.
	UserSid *string `json:"user_sid"`
}

// The current state of this User Conversation
type ConversationsV1UserUserConversationConversationState string

// The Notification Level of this User Conversation.
type ConversationsV1UserUserConversationNotificationLevel string

// ListConfigurationAddressParams defines parameters for ListConfigurationAddress.
type ListConfigurationAddressParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListConversationParams defines parameters for ListConversation.
type ListConversationParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// CreateConversationParams defines parameters for CreateConversation.
type CreateConversationParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *CreateConversationParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// CreateConversationParamsXTwilioWebhookEnabled defines parameters for CreateConversation.
type CreateConversationParamsXTwilioWebhookEnabled string

// ListConversationMessageParams defines parameters for ListConversationMessage.
type ListConversationMessageParams struct {
	// The sort order of the returned messages. Can be: `asc` (ascending) or `desc` (descending), with `asc` as the default.
	Order *ListConversationMessageParamsOrder `json:"Order,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListConversationMessageParamsOrder defines parameters for ListConversationMessage.
type ListConversationMessageParamsOrder string

// CreateConversationMessageParams defines parameters for CreateConversationMessage.
type CreateConversationMessageParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *CreateConversationMessageParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// CreateConversationMessageParamsXTwilioWebhookEnabled defines parameters for CreateConversationMessage.
type CreateConversationMessageParamsXTwilioWebhookEnabled string

// ListConversationMessageReceiptParams defines parameters for ListConversationMessageReceipt.
type ListConversationMessageReceiptParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// DeleteConversationMessageParams defines parameters for DeleteConversationMessage.
type DeleteConversationMessageParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *DeleteConversationMessageParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// DeleteConversationMessageParamsXTwilioWebhookEnabled defines parameters for DeleteConversationMessage.
type DeleteConversationMessageParamsXTwilioWebhookEnabled string

// UpdateConversationMessageParams defines parameters for UpdateConversationMessage.
type UpdateConversationMessageParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *UpdateConversationMessageParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// UpdateConversationMessageParamsXTwilioWebhookEnabled defines parameters for UpdateConversationMessage.
type UpdateConversationMessageParamsXTwilioWebhookEnabled string

// ListConversationParticipantParams defines parameters for ListConversationParticipant.
type ListConversationParticipantParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// CreateConversationParticipantParams defines parameters for CreateConversationParticipant.
type CreateConversationParticipantParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *CreateConversationParticipantParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// CreateConversationParticipantParamsXTwilioWebhookEnabled defines parameters for CreateConversationParticipant.
type CreateConversationParticipantParamsXTwilioWebhookEnabled string

// DeleteConversationParticipantParams defines parameters for DeleteConversationParticipant.
type DeleteConversationParticipantParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *DeleteConversationParticipantParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// DeleteConversationParticipantParamsXTwilioWebhookEnabled defines parameters for DeleteConversationParticipant.
type DeleteConversationParticipantParamsXTwilioWebhookEnabled string

// UpdateConversationParticipantParams defines parameters for UpdateConversationParticipant.
type UpdateConversationParticipantParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *UpdateConversationParticipantParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// UpdateConversationParticipantParamsXTwilioWebhookEnabled defines parameters for UpdateConversationParticipant.
type UpdateConversationParticipantParamsXTwilioWebhookEnabled string

// ListConversationScopedWebhookParams defines parameters for ListConversationScopedWebhook.
type ListConversationScopedWebhookParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// DeleteConversationParams defines parameters for DeleteConversation.
type DeleteConversationParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *DeleteConversationParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// DeleteConversationParamsXTwilioWebhookEnabled defines parameters for DeleteConversation.
type DeleteConversationParamsXTwilioWebhookEnabled string

// UpdateConversationParams defines parameters for UpdateConversation.
type UpdateConversationParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *UpdateConversationParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// UpdateConversationParamsXTwilioWebhookEnabled defines parameters for UpdateConversation.
type UpdateConversationParamsXTwilioWebhookEnabled string

// ListCredentialParams defines parameters for ListCredential.
type ListCredentialParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListParticipantConversationParams defines parameters for ListParticipantConversation.
type ListParticipantConversationParams struct {
	// A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.
	Identity *string `json:"Identity,omitempty"`

	// A unique string identifier for the conversation participant who's not a Conversation User. This parameter could be found in messaging_binding.address field of Participant resource. It should be url-encoded.
	Address *string `json:"Address,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListRoleParams defines parameters for ListRole.
type ListRoleParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListServiceParams defines parameters for ListService.
type ListServiceParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListServiceBindingParams defines parameters for ListServiceBinding.
type ListServiceBindingParams struct {
	// The push technology used by the Binding resources to read.  Can be: `apn`, `gcm`, or `fcm`.  See [push notification configuration](https://www.twilio.com/docs/chat/push-notification-configuration) for more info.
	BindingType *[]ListServiceBindingParamsBindingType `json:"BindingType,omitempty"`

	// The identity of a [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource) this binding belongs to. See [access tokens](https://www.twilio.com/docs/conversations/create-tokens) for more details.
	Identity *[]string `json:"Identity,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListServiceBindingParamsBindingType defines parameters for ListServiceBinding.
type ListServiceBindingParamsBindingType string

// ListServiceConversationParams defines parameters for ListServiceConversation.
type ListServiceConversationParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// CreateServiceConversationParams defines parameters for CreateServiceConversation.
type CreateServiceConversationParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *CreateServiceConversationParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// CreateServiceConversationParamsXTwilioWebhookEnabled defines parameters for CreateServiceConversation.
type CreateServiceConversationParamsXTwilioWebhookEnabled string

// ListServiceConversationMessageParams defines parameters for ListServiceConversationMessage.
type ListServiceConversationMessageParams struct {
	// The sort order of the returned messages. Can be: `asc` (ascending) or `desc` (descending), with `asc` as the default.
	Order *ListServiceConversationMessageParamsOrder `json:"Order,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListServiceConversationMessageParamsOrder defines parameters for ListServiceConversationMessage.
type ListServiceConversationMessageParamsOrder string

// CreateServiceConversationMessageParams defines parameters for CreateServiceConversationMessage.
type CreateServiceConversationMessageParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *CreateServiceConversationMessageParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// CreateServiceConversationMessageParamsXTwilioWebhookEnabled defines parameters for CreateServiceConversationMessage.
type CreateServiceConversationMessageParamsXTwilioWebhookEnabled string

// ListServiceConversationMessageReceiptParams defines parameters for ListServiceConversationMessageReceipt.
type ListServiceConversationMessageReceiptParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// DeleteServiceConversationMessageParams defines parameters for DeleteServiceConversationMessage.
type DeleteServiceConversationMessageParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *DeleteServiceConversationMessageParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// DeleteServiceConversationMessageParamsXTwilioWebhookEnabled defines parameters for DeleteServiceConversationMessage.
type DeleteServiceConversationMessageParamsXTwilioWebhookEnabled string

// UpdateServiceConversationMessageParams defines parameters for UpdateServiceConversationMessage.
type UpdateServiceConversationMessageParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *UpdateServiceConversationMessageParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// UpdateServiceConversationMessageParamsXTwilioWebhookEnabled defines parameters for UpdateServiceConversationMessage.
type UpdateServiceConversationMessageParamsXTwilioWebhookEnabled string

// ListServiceConversationParticipantParams defines parameters for ListServiceConversationParticipant.
type ListServiceConversationParticipantParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// CreateServiceConversationParticipantParams defines parameters for CreateServiceConversationParticipant.
type CreateServiceConversationParticipantParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *CreateServiceConversationParticipantParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// CreateServiceConversationParticipantParamsXTwilioWebhookEnabled defines parameters for CreateServiceConversationParticipant.
type CreateServiceConversationParticipantParamsXTwilioWebhookEnabled string

// DeleteServiceConversationParticipantParams defines parameters for DeleteServiceConversationParticipant.
type DeleteServiceConversationParticipantParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *DeleteServiceConversationParticipantParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// DeleteServiceConversationParticipantParamsXTwilioWebhookEnabled defines parameters for DeleteServiceConversationParticipant.
type DeleteServiceConversationParticipantParamsXTwilioWebhookEnabled string

// UpdateServiceConversationParticipantParams defines parameters for UpdateServiceConversationParticipant.
type UpdateServiceConversationParticipantParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *UpdateServiceConversationParticipantParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// UpdateServiceConversationParticipantParamsXTwilioWebhookEnabled defines parameters for UpdateServiceConversationParticipant.
type UpdateServiceConversationParticipantParamsXTwilioWebhookEnabled string

// ListServiceConversationScopedWebhookParams defines parameters for ListServiceConversationScopedWebhook.
type ListServiceConversationScopedWebhookParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// DeleteServiceConversationParams defines parameters for DeleteServiceConversation.
type DeleteServiceConversationParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *DeleteServiceConversationParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// DeleteServiceConversationParamsXTwilioWebhookEnabled defines parameters for DeleteServiceConversation.
type DeleteServiceConversationParamsXTwilioWebhookEnabled string

// UpdateServiceConversationParams defines parameters for UpdateServiceConversation.
type UpdateServiceConversationParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *UpdateServiceConversationParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// UpdateServiceConversationParamsXTwilioWebhookEnabled defines parameters for UpdateServiceConversation.
type UpdateServiceConversationParamsXTwilioWebhookEnabled string

// ListServiceParticipantConversationParams defines parameters for ListServiceParticipantConversation.
type ListServiceParticipantConversationParams struct {
	// A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.
	Identity *string `json:"Identity,omitempty"`

	// A unique string identifier for the conversation participant who's not a Conversation User. This parameter could be found in messaging_binding.address field of Participant resource. It should be url-encoded.
	Address *string `json:"Address,omitempty"`

	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListServiceRoleParams defines parameters for ListServiceRole.
type ListServiceRoleParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListServiceUserParams defines parameters for ListServiceUser.
type ListServiceUserParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// CreateServiceUserParams defines parameters for CreateServiceUser.
type CreateServiceUserParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *CreateServiceUserParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// CreateServiceUserParamsXTwilioWebhookEnabled defines parameters for CreateServiceUser.
type CreateServiceUserParamsXTwilioWebhookEnabled string

// DeleteServiceUserParams defines parameters for DeleteServiceUser.
type DeleteServiceUserParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *DeleteServiceUserParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// DeleteServiceUserParamsXTwilioWebhookEnabled defines parameters for DeleteServiceUser.
type DeleteServiceUserParamsXTwilioWebhookEnabled string

// UpdateServiceUserParams defines parameters for UpdateServiceUser.
type UpdateServiceUserParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *UpdateServiceUserParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// UpdateServiceUserParamsXTwilioWebhookEnabled defines parameters for UpdateServiceUser.
type UpdateServiceUserParamsXTwilioWebhookEnabled string

// ListServiceUserConversationParams defines parameters for ListServiceUserConversation.
type ListServiceUserConversationParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// ListUserParams defines parameters for ListUser.
type ListUserParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}

// CreateUserParams defines parameters for CreateUser.
type CreateUserParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *CreateUserParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// CreateUserParamsXTwilioWebhookEnabled defines parameters for CreateUser.
type CreateUserParamsXTwilioWebhookEnabled string

// DeleteUserParams defines parameters for DeleteUser.
type DeleteUserParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *DeleteUserParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// DeleteUserParamsXTwilioWebhookEnabled defines parameters for DeleteUser.
type DeleteUserParamsXTwilioWebhookEnabled string

// UpdateUserParams defines parameters for UpdateUser.
type UpdateUserParams struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *UpdateUserParamsXTwilioWebhookEnabled `json:"X-Twilio-Webhook-Enabled,omitempty"`
}

// UpdateUserParamsXTwilioWebhookEnabled defines parameters for UpdateUser.
type UpdateUserParamsXTwilioWebhookEnabled string

// ListUserConversationParams defines parameters for ListUserConversation.
type ListUserConversationParams struct {
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int `json:"PageSize,omitempty"`
}
